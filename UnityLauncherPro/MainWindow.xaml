<Window x:Class="UnityLauncherPro.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:UnityLauncherPro"
		mc:Ignorable="d"
        Title="UnityLauncherPro" Height="650" Width="600" WindowStartupLocation="CenterScreen" Background="{DynamicResource DarkestBackground}" MinWidth="600" MinHeight="650" AllowsTransparency="True" WindowStyle="None" Margin="0" KeyDown="OnWindowKeyDown" Closing="Window_Closing" SizeChanged="Window_SizeChanged" PreviewKeyDown="Window_PreviewKeyDown"	>

	<Window.Resources>

		<!-- colors for unity missing installatios -->
		<local:UnityInstallation x:Key="MyConverter"/>

		<!-- tabs -->
		<Style x:Key="TabItemStyle1" TargetType="{x:Type TabItem}">
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type TabItem}">
						<Border x:Name="Border" BorderThickness="0"
                        Padding="15,5,15,5" Margin="1,0,0,0" BorderBrush="{x:Null}">
							<ContentPresenter x:Name="ContentSite" ContentSource="Header" />
						</Border>
						<ControlTemplate.Triggers>
							<Trigger Property="IsSelected" Value="False">
								<Setter Property="TextElement.Foreground" TargetName="ContentSite" Value="{StaticResource DeactiveTabForeground}"/>
								<Setter TargetName="Border" Property="Background" Value="{StaticResource DeactiveTabBackground}" />
							</Trigger>
							<Trigger Property="IsSelected" Value="True">
								<Setter Property="TextElement.Foreground" TargetName="ContentSite" Value="White"/>
								<Setter TargetName="Border" Property="Background" Value="{StaticResource MainBackgroundColor}"/>
							</Trigger>
							<Trigger Property="IsMouseOver" Value="True">
								<Setter TargetName="Border" Property="Background" Value="{StaticResource MainBackgroundColor}"/>
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>

		<!-- datagrid header -->
		<Style x:Key="HeaderStyle" TargetType="DataGridColumnHeader">
			<Setter Property="Background" Value="{StaticResource DatagridHeaderBackground}" />
			<Setter Property="Foreground" Value="{StaticResource DatagridHeaderForeground}" />
			<Setter Property="BorderBrush" Value="{StaticResource DatagridHeaderBorder}" />
			<Setter Property="BorderThickness" Value="0,0,1,1" />
			<Setter Property="SnapsToDevicePixels" Value="True" />
			<Setter Property="HorizontalContentAlignment" Value="Left" />
			<Setter Property="Height" Value="28" />
			<Setter Property="Padding" Value="6,2,2,2" />
			<Style.Triggers>
				<Trigger Property="IsMouseOver" Value="True">
					<Setter Property="Background" Value="{StaticResource ButtonBackground}"/>
				</Trigger>
			</Style.Triggers>
		</Style>

		<!-- datagrid rows & row selection -->
		<Style TargetType="DataGridRow">
			<Setter Property="Background" Value="{StaticResource ButtonBackground}" />
			<Setter Property="BorderBrush" Value="{x:Null}" />
			<Setter Property="BorderThickness" Value="0,0,0,0" />
			<Style.Triggers>
				<Trigger Property="IsMouseOver" Value="True">
					<Setter Property="Background" Value="{StaticResource DataGridRowMouseOver}"/>
				</Trigger>
				<Trigger Property="IsSelected" Value="True">
					<Setter Property="Background" Value="{StaticResource DataGridRowSelectedBackground}" />
				</Trigger>
			</Style.Triggers>
		</Style>

		<!-- datagrid hide selected cell borders -->
		<Style TargetType="{x:Type DataGridCell}">
			<Setter Property="BorderBrush" Value="Transparent" />
			<Setter Property="FocusVisualStyle" Value="{x:Null}" />
			<Setter Property="Margin" Value="0,0.5,0,0.5" />
			<Style.Triggers>
				<Trigger Property="IsSelected" Value="True">
					<Setter Property="Background" Value="Transparent" />
				</Trigger>
				<Trigger Property="IsSelected" Value="False">
					<Setter Property="Background" Value="Transparent" />
				</Trigger>
			</Style.Triggers>
		</Style>

		<!-- custom buttons -->
		<Style x:Key="CustomButton" TargetType="Button">
			<Setter Property="SnapsToDevicePixels" Value="true"/>
			<Setter Property="OverridesDefaultStyle" Value="true"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="Button">
						<Border Name="shortcutbutton" BorderThickness="0" BorderBrush="Black" Background="{TemplateBinding Background}">
							<ContentPresenter Margin="0" HorizontalAlignment="Center" VerticalAlignment="Center" RecognizesAccessKey="True"/>
						</Border>
						<ControlTemplate.Triggers>
							<Trigger Property="IsMouseOver" Value="true">
								<Setter TargetName="shortcutbutton" Property="Background" Value="#FF494949" />
								<!--<Setter Property="TextElement.Foreground" TargetName="shortcutbutton" Value="Blue"/>-->
							</Trigger>
							<Trigger Property="IsPressed" Value="true">
								<Setter TargetName="shortcutbutton" Property="Background" Value="#FF0F0F0F" />
								<!--<Setter Property="TextElement.Foreground" TargetName="shortcutbutton" Value="Red"/>-->
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>

		<!-- datagrid scrollbar customization -->

		<!-- scrollbar top/bottom arrow buttons -->
		<Style x:Key="ScrollBarLineButton" TargetType="{x:Type RepeatButton}">
			<Setter Property="SnapsToDevicePixels" Value="True"/>
			<Setter Property="OverridesDefaultStyle" Value="true"/>
			<Setter Property="Focusable" Value="false"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type RepeatButton}">
						<!-- button background -->
						<Border Name="Border" Margin="1" CornerRadius="0" BorderThickness="0" Background="{DynamicResource ButtonBackground}" BorderBrush="{x:Null}">
							<!-- arrow sign -->
							<Path HorizontalAlignment="Center" VerticalAlignment="Center" Fill="{DynamicResource ScrollArrowForeground}" Data="{Binding Path=Content,RelativeSource={RelativeSource TemplatedParent}}" />
						</Border>
						<ControlTemplate.Triggers>
							<!-- NOTE order matters, if pressed is before mouseover, then it gets overwritten -->
							<Trigger Property="IsMouseOver" Value="true">
								<Setter TargetName="Border" Property="Background" Value="{StaticResource TextBoxBackground}" />
							</Trigger>
							<Trigger Property="IsPressed" Value="true">
								<Setter TargetName="Border" Property="Background" Value="{StaticResource ScrollArrowPressed}" />
							</Trigger>
							<Trigger Property="IsEnabled" Value="false">
								<Setter Property="Foreground" Value="Black"/>
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>

		<Style x:Key="ScrollBarPageButton" TargetType="{x:Type RepeatButton}">
			<Setter Property="SnapsToDevicePixels" Value="True"/>
			<Setter Property="OverridesDefaultStyle" Value="true"/>
			<Setter Property="IsTabStop" Value="false"/>
			<Setter Property="Focusable" Value="false"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type RepeatButton}">
						<Border Background="Transparent" />
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>

		<!-- scroll thumb (elevator) bar -->
		<Style x:Key="ScrollBarThumb" TargetType="{x:Type Thumb}">
			<Setter Property="SnapsToDevicePixels" Value="True"/>
			<Setter Property="OverridesDefaultStyle" Value="true"/>
			<Setter Property="IsTabStop" Value="false"/>
			<Setter Property="Focusable" Value="false"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type Thumb}">
						<Border Name="Border" CornerRadius="0" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1" />
						<ControlTemplate.Triggers>
							<Trigger Property="IsMouseOver" Value="true">
								<Setter TargetName="Border" Property="Background" Value="{StaticResource ScrollBarThumbFill}" />
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>

		<ControlTemplate x:Key="VerticalScrollBar" TargetType="{x:Type ScrollBar}">
			<Grid >
				<Grid.RowDefinitions>
					<RowDefinition MaxHeight="18"/>
					<RowDefinition Height="0.00001*"/>
					<RowDefinition MaxHeight="18"/>
				</Grid.RowDefinitions>
				<!-- scrollbar background -->
				<Border Grid.RowSpan="3" CornerRadius="0" Background="{DynamicResource ScrollBarBackground}" />
				<!-- scrollbar top button -->
				<RepeatButton Grid.Row="0" Style="{StaticResource ScrollBarLineButton}" Height="18" Command="ScrollBar.LineUpCommand"  Content="M 0 4 L 8 4 L 4 0 Z" />
				<Track Name="PART_Track" Grid.Row="1" IsDirectionReversed="true">
					<Track.DecreaseRepeatButton>
						<RepeatButton Style="{StaticResource ScrollBarPageButton}" Command="ScrollBar.PageUpCommand" />
					</Track.DecreaseRepeatButton>
					<Track.Thumb>
						<!-- scrollbar foreground -->
						<Thumb Style="{StaticResource ScrollBarThumb}" Margin="1,0,1,0" Background="{DynamicResource ScrollBarFill}" BorderBrush="{x:Null}"/>
					</Track.Thumb>
					<Track.IncreaseRepeatButton>
						<RepeatButton Style="{StaticResource ScrollBarPageButton}" Command="ScrollBar.PageDownCommand" />
					</Track.IncreaseRepeatButton>
				</Track>
				<!-- scrollbar bottom button -->
				<RepeatButton Grid.Row="3" Style="{StaticResource ScrollBarLineButton}" Height="18" Command="ScrollBar.LineDownCommand" Content="M 0 0 L 4 4 L 8 0 Z" />
			</Grid>
		</ControlTemplate>

		<Style x:Key="{x:Type ScrollBar}" TargetType="{x:Type ScrollBar}">
			<Setter Property="SnapsToDevicePixels" Value="True"/>
			<Setter Property="OverridesDefaultStyle" Value="true"/>
			<Style.Triggers>
				<Trigger Property="Orientation" Value="Vertical">
					<Setter Property="Width" Value="18"/>
					<Setter Property="Height" Value="Auto" />
					<Setter Property="Template" Value="{StaticResource VerticalScrollBar}" />
				</Trigger>
			</Style.Triggers>
		</Style>

		<BooleanToVisibilityConverter x:Key="MyBoolToVisibilityConverter" />

	</Window.Resources>


	<!-- UI -->

	<Grid Margin="0">
		<Grid.RowDefinitions>
			<RowDefinition Height="23" />
			<RowDefinition Height="*" />
			<RowDefinition Height="25" />
		</Grid.RowDefinitions>

		<!-- menubar -->
		<Grid Grid.Row="0" UseLayoutRounding="False">
			<Rectangle Fill="{DynamicResource DarkMenuBar}" MouseDown="OnRectangleMouseDown" />
			<Image Source="Images/icon.png" RenderOptions.BitmapScalingMode="NearestNeighbor" HorizontalAlignment="Left" Width="16" Height="16" Margin="4,0,0,0" SnapsToDevicePixels="True" UseLayoutRounding="True" />
			<Label Content="UnityLauncherPro" IsHitTestVisible="False" Margin="19,0,0,-5"  Foreground="#FFB8B8B8" FontSize="12" HorizontalAlignment="Left"  />
			<!-- minimize -->
			<Button Name="btnMinimize" BorderThickness="0" Style="{StaticResource {x:Static ToolBar.ButtonStyleKey}}" HorizontalAlignment="Right" VerticalAlignment="Top" Height="23" Width="23" Background="Transparent" Click="BtnMinimize_Click" Margin="0,0,27,0" Padding="2,0,2,8" IsTabStop="False">
				<TextBlock Text="–"   FontSize="15" Foreground="#FFC3C3C3" Padding="0" Height="23" HorizontalAlignment="Center"/>
			</Button>
			<!-- close -->
			<Button Name="btnClose"    BorderThickness="0" Style="{StaticResource {x:Static ToolBar.ButtonStyleKey}}" HorizontalAlignment="Right" VerticalAlignment="Top" Height="23" Width="23" Background="Transparent" Click="BtnClose_Click" Padding="0,2" IsTabStop="False">
				<TextBlock Text="❌" FontSize="10" Foreground="#FFC3C3C3" Padding="5,3,4,4" HorizontalAlignment="Center" />
			</Button>
		</Grid>

		<!-- main content : Tabs -->
		<TabControl Grid.Row="1" x:Name="tabControl"  Background="{DynamicResource MainBackgroundColor}" BorderBrush="{x:Null}" Padding="0" Margin="0" SelectionChanged="OnTabSelectionChanged">

			<!-- Tab: Projects-->
			<TabItem Header="Projects" Style="{DynamicResource TabItemStyle1}" Padding="0,0,0,0" Margin="-1,1,1,-1" BorderBrush="{x:Null}">
				<Grid>
					<!-- search box -->
					<Grid Background="{DynamicResource TextBoxBackground}" HorizontalAlignment="Left" VerticalAlignment="Top" Width="222" Margin="6,5,0,0" Height="20"  >
						<TextBlock Margin="3,2" MinWidth="100" Text="Search" Foreground="#7F919191" Visibility="{Binding ElementName=txtSearchBox, Path=Text.IsEmpty, Converter={StaticResource MyBoolToVisibilityConverter}}" Height="24" />
						<TextBox MinWidth="100" CaretBrush="#FFE2E2E2" Name="txtSearchBox" Background="Transparent" BorderBrush="{x:Null}" Foreground="#FFC7C7C7" SelectionBrush="#FF003966" BorderThickness="0" Margin="2,2,0,0" UndoLimit="64" TextChanged="OnSearchTextChanged" />
						<Button Name="btnClearSearch" Style="{StaticResource {x:Static ToolBar.ButtonStyleKey}}" BorderThickness="0"  HorizontalAlignment="Right" VerticalAlignment="Top" Height="23" Width="23" Background="Transparent" Padding="0,2" Visibility="Visible" BorderBrush="{x:Null}" Click="OnClearProjectSearchClick">
							<TextBlock Text="❌" FontSize="8" Foreground="{DynamicResource ButtonForeground}" Padding="5,3,4,4" HorizontalAlignment="Center">
								<TextBlock.Style>
									<Style TargetType="TextBlock">
										<Style.Triggers>
											<DataTrigger Binding="{Binding ElementName=txtSearchBox, Path=Text}" Value="">
												<Setter Property="Visibility" Value="Hidden"/>

											</DataTrigger>
											<DataTrigger Binding="{Binding ElementName=txtSearchBox, Path=Text}" Value="{x:Null}">
												<Setter Property="Visibility" Value="Hidden"/>
											</DataTrigger>
										</Style.Triggers>
									</Style>
								</TextBlock.Style>
							</TextBlock>
						</Button>
					</Grid>

					<!--<TextBlock IsHitTestVisible="False" Text="Search" VerticalAlignment="Top" HorizontalAlignment="Left" Margin="0" Foreground="#FF707070" Height="29" Padding="12,6.5,0,0">
						<TextBlock.Style>
							<Style TargetType="{x:Type TextBlock}">
								<Setter Property="Visibility" Value="Collapsed"/>
								<Style.Triggers>
									<DataTrigger Binding="{Binding Text, ElementName=SearchTermTextBox}" Value="">
										<Setter Property="Visibility" Value="Visible"/>
									</DataTrigger>
								</Style.Triggers>
							</Style>
						</TextBlock.Style>
					</TextBlock>-->

					<Button Style="{StaticResource CustomButton}" ToolTip="Add existing project" x:Name="btnAddProjectFolder" Content="Add Project.." Height="22" Width="78" HorizontalAlignment="Right" VerticalAlignment="Top" Background="#FF3F3F46" Foreground="#FFC1C1C1" Margin="0,4,34,0" Click="BtnAddProjectFolder_Click" BorderBrush="{x:Null}" />
					<Button Style="{StaticResource CustomButton}" ToolTip="Refresh list (F5)" x:Name="btnRefreshProjectList" Content="⟳" Height="22" Width="22" HorizontalAlignment="Right" VerticalAlignment="Top" FontSize="16" Background="#FF3F3F46" Foreground="#FFC1C1C1" Margin="0,4,3,0" Padding="1,-2,1,1" BorderBrush="{x:Null}" Click="BtnRefreshProjectList_Click"/>

					<DataGrid x:Name="gridRecent" SelectionMode="Single" Margin="4,30,2,42" Background="{x:Null}" BorderBrush="{x:Null}" ColumnHeaderStyle="{StaticResource HeaderStyle}" Padding="0" HorizontalScrollBarVisibility="Disabled" HeadersVisibility="Column" Foreground="#FFD8D8D8" HorizontalGridLinesBrush="#4C000000" VerticalGridLinesBrush="#19000000" AutoGenerateColumns="False">
						<DataGrid.Columns>
							<DataGridTextColumn Binding="{Binding Title}" ClipboardContentBinding="{x:Null}" Header="Project" IsReadOnly="True" Width="150"/>
							<DataGridTextColumn Binding="{Binding Version}" ClipboardContentBinding="{x:Null}" Header="Version" IsReadOnly="True" Width="72">
								<DataGridTextColumn.CellStyle>
									<Style TargetType="{x:Type DataGridCell}">
										<Setter Property="Foreground" Value="#FFF54F4F" />
										<Style.Triggers>
											<DataTrigger Binding="{Binding Version, Converter={StaticResource MyConverter}}" Value="true">
												<Setter Property="Foreground" Value="#FF00C500" />
											</DataTrigger>
										</Style.Triggers>
									</Style>
								</DataGridTextColumn.CellStyle>
							</DataGridTextColumn>
							<DataGridTextColumn Binding="{Binding Path}" ClipboardContentBinding="{x:Null}" Header="Path" IsReadOnly="True" Width="185"/>
							<DataGridTextColumn Binding="{Binding Modified, StringFormat=\{0:dd/MM/yyyy HH:mm:ss\}}" ClipboardContentBinding="{x:Null}" Header="Modified" IsReadOnly="True" Width="120"/>
							<DataGridTextColumn Binding="{Binding Arguments}" ClipboardContentBinding="{x:Null}" Header="Arguments" IsReadOnly="True" Width="100"/>
							<DataGridTextColumn Binding="{Binding GITBranch}" ClipboardContentBinding="{x:Null}" Header="GITBranch" IsReadOnly="True" Width="100"/>
						</DataGrid.Columns>

						<!-- right click context menu -->
						<DataGrid.ContextMenu>
							<ContextMenu>
								<MenuItem x:Name="menuItemCopyVersion" Header="Copy Unity Version" Click="MenuItemCopyVersion_Click" />
								<Separator />
								<MenuItem Header="Menu item asdf" />
							</ContextMenu>
						</DataGrid.ContextMenu>

						<!-- sample data for testing -->
						<local:Project GITBranch="" Modified="" Title="M dfgh dfghMO" Path="A:/temp" Version="2099.1.2.3"/>
						<local:Project GITBranch="" Modified="" Title="asdgdfg" Path="A:/temp" Version="5.6.7f1"/>
						<local:Project GITBranch="" Modified="" Title="Mghdfghdf dfghdfgMO" Path="A:/temp" Version="2018.3.13f1"/>
						<local:Project GITBranch="" Modified="" Title="MMO" Path="A:/temp" Version="2099.1.2.3"/>
						<local:Project GITBranch="" Modified="" Title="fghdhdfgh" Path="A:/temp" Version="2018.3.13f1"/>
						<local:Project GITBranch="" Modified="" Title="MdfMO" Path="A:/temp" Version="2099.1.2.3"/>
						<local:Project GITBranch="" Modified="" Title="MMO" Path="A:/temp" Version="2099.1.2.3"/>
						<local:Project GITBranch="" Modified="" Title="MdfgMO" Path="A:/temp" Version="2099.1.2.3"/>
						<local:Project GITBranch="" Modified="" Title="MMO" Path="A:/temp" Version="2099.1.2.3"/>
						<local:Project GITBranch="" Modified="" Title="MdfghMO" Path="A:/temp" Version="2099.1.2.3"/>
						<local:Project GITBranch="" Modified="" Title="MMO" Path="A:/temp" Version="2099.1.2.3"/>
						<local:Project GITBranch="" Modified="" Title="MMO" Path="A:/temp" Version="5.6.7f1"/>
						<local:Project GITBranch="" Modified="" Title="ddfghfghdfgh" Path="A:/temp" Version="2099.1.2.3"/>
						<local:Project GITBranch="" Modified="" Title="MMO" Path="A:/temp" Version="2099.1.2.3"/>
						<local:Project GITBranch="" Modified="" Title="MMO" Path="A:/temp" Version="2018.3.13f1"/>
						<local:Project GITBranch="" Modified="" Title="MMO" Path="A:/temp" Version="2099.1.2.3"/>
						<local:Project GITBranch="" Modified="" Title="MMdfghO" Path="A:/temp" Version="2099.1.2.3"/>
						<local:Project GITBranch="" Modified="" Title="MMO" Path="A:/temp" Version="2099.1.2.3"/>
						<local:Project GITBranch="" Modified="" Title="MdfghMO" Path="A:/temp" Version="2099.1.2.3"/>
						<local:Project GITBranch="" Modified="" Title="MMO" Path="A:/temp" Version="2099.1.2.3"/>
						<local:Project GITBranch="" Modified="" Title="MMO" Path="A:/temp" Version="2099.1.2.3"/>
						<local:Project GITBranch="" Modified="" Title="dfgh" Path="A:/temp" Version="5.6.7f1"/>
						<local:Project GITBranch="" Modified="" Title="MMO" Path="A:/temp" Version="2018.3.13f1"/>
						<local:Project GITBranch="" Modified="" Title="MMO" Path="A:/temp" Version="2099.1.2.3"/>
						<local:Project GITBranch="" Modified="" Title="MMO" Path="A:/temp" Version="2099.1.2.3"/>
						<local:Project GITBranch="" Modified="" Title="Mdfg hMO" Path="A:/temp" Version="2099.1.2.3"/>
						<local:Project GITBranch="" Modified="" Title="MMO" Path="A:/temp" Version="2099.1.2.3"/>
						<local:Project GITBranch="" Modified="" Title="MMO" Path="A:/temp" Version="2099.1.2.3"/>
						<local:Project GITBranch="" Modified="" Title="MMd fghO" Path="A:/temp" Version="2099.1.2.3"/>
						<local:Project GITBranch="" Modified="" Title="MMO" Path="A:/temp" Version="2099.1.2.3"/>
						<local:Project GITBranch="" Modified="" Title="MMdfg hO" Path="A:/temp" Version="2099.1.2.3"/>
						<local:Project GITBranch="" Modified="" Title="Md fghMO" Path="A:/temp" Version="2099.1.2.3"/>
					</DataGrid>

					<!-- bottom buttoms row -->
					<Grid VerticalAlignment="Bottom" Margin="4,0,8,5">
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="20*" />
							<ColumnDefinition Width="20*" />
							<ColumnDefinition Width="45*" />
							<ColumnDefinition Width="15*" />
						</Grid.ColumnDefinitions>
						<Grid.RowDefinitions>
							<RowDefinition Height="32" />
						</Grid.RowDefinitions>
						<Button Grid.Column="0" Style="{StaticResource CustomButton}" x:Name="btnUpgradeProject" Background="{DynamicResource ButtonBackground}" Foreground="#FFC1C1C1" Margin="5,0,0,0" BorderBrush="{x:Null}" Click="BtnUpgradeProject_Click">
							<Label Foreground="{DynamicResource ButtonForeground}">_Upgrade</Label>
						</Button>
						<Button Grid.Column="1" Style="{StaticResource CustomButton}" x:Name="btnLaunchUnity" Background="{DynamicResource ButtonBackground}" Foreground="#FFC1C1C1" Margin="8,0,0,0" BorderBrush="{x:Null}" Click="BtnLaunchUnity_Click" >
							<Label Foreground="{DynamicResource ButtonForeground}">_Run Unity</Label>
						</Button>

						<Button Grid.Column="2" Style="{StaticResource CustomButton}" x:Name="btnLaunchProject" Background="{DynamicResource ButtonBackground}" Foreground="#FFC1C1C1" Margin="8,0,0,0" BorderBrush="{x:Null}" Click="BtnLaunchProject_Click" >
							<Label Foreground="{DynamicResource ButtonForeground}">_Open Project</Label>
						</Button>

						<Button Grid.Column="3" Style="{StaticResource CustomButton}" x:Name="btnExplore" Background="{DynamicResource ButtonBackground}" Foreground="#FFC1C1C1" Margin="8,0,0,0" BorderBrush="{x:Null}" Click="BtnExplore_Click" >
							<Label Foreground="{DynamicResource ButtonForeground}">_Explore</Label>
						</Button>

					</Grid>
				</Grid>
			</TabItem>

			<!-- Tab: Unitys -->
			<TabItem Header="Unitys" Style="{DynamicResource TabItemStyle1}" Padding="0,0,0,0" Margin="-1,1,1,-1" BorderBrush="{x:Null}" Background="Black">
				<Grid>
					<!-- search box -->
					<Grid Background="{DynamicResource TextBoxBackground}" HorizontalAlignment="Left" VerticalAlignment="Top" Width="222" Margin="6,5,0,0" Height="20"  >
						<TextBlock Margin="3,2" MinWidth="100" Text="Search" Foreground="#7F919191" Visibility="{Binding ElementName=txtSearchBoxUnity, Path=Text.IsEmpty, Converter={StaticResource MyBoolToVisibilityConverter}}" Height="24" />
						<TextBox MinWidth="100" CaretBrush="#FFE2E2E2" Name="txtSearchBoxUnity" Background="Transparent" BorderBrush="{x:Null}" Foreground="#FFC7C7C7" SelectionBrush="#FF003966" BorderThickness="0" Margin="2,2,0,0" UndoLimit="64" />
						<Button Name="btnClearUnitySearch" Style="{StaticResource {x:Static ToolBar.ButtonStyleKey}}" BorderThickness="0"  HorizontalAlignment="Right" VerticalAlignment="Top" Height="23" Width="23" Background="Transparent" Padding="0,2" Visibility="Visible" BorderBrush="{x:Null}" Click="OnClearUnitySearchClick">
							<TextBlock Text="❌" FontSize="8" Foreground="#FFC3C3C3" Padding="5,3,4,4" HorizontalAlignment="Center">
								<TextBlock.Style>
									<Style TargetType="TextBlock">
										<Style.Triggers>
											<DataTrigger Binding="{Binding ElementName=txtSearchBoxUnity, Path=Text}" Value="">
												<Setter Property="Visibility" Value="Hidden"/>
											</DataTrigger>
											<DataTrigger Binding="{Binding ElementName=txtSearchBoxUnity, Path=Text}" Value="{x:Null}">
												<Setter Property="Visibility" Value="Hidden"/>
											</DataTrigger>
										</Style.Triggers>
									</Style>
								</TextBlock.Style>
							</TextBlock>
						</Button>
					</Grid>

					<Button Style="{StaticResource CustomButton}" ToolTip="Refresh installations (F5)" x:Name="btnRefreshUnityList" Content="⟳" Height="22" Width="22" HorizontalAlignment="Right" VerticalAlignment="Top" FontSize="16" Background="#FF3F3F46" Foreground="#FFC1C1C1" Margin="0,4,3,0" Padding="1,-2,1,1" BorderBrush="{x:Null}"/>

					<DataGrid x:Name="dataGridUnitys"  SelectionMode="Single" Margin="4,30,2,42" Background="{x:Null}" BorderBrush="{x:Null}" ColumnHeaderStyle="{StaticResource HeaderStyle}" Padding="0" HorizontalScrollBarVisibility="Disabled" HeadersVisibility="Column" Foreground="#FFD8D8D8" HorizontalGridLinesBrush="#4C000000" VerticalGridLinesBrush="#19000000" AutoGenerateColumns="False">

						<DataGrid.Columns>
							<DataGridTextColumn Binding="{Binding Version}" ClipboardContentBinding="{x:Null}" Header="Version" IsReadOnly="True" MinWidth="123"/>
							<DataGridTextColumn Binding="{Binding Path}" ClipboardContentBinding="{x:Null}" Header="Path" IsReadOnly="True"/>
							<DataGridTextColumn Binding="{Binding Installed}" ClipboardContentBinding="{x:Null}" Header="Installed" IsReadOnly="True"/>
						</DataGrid.Columns>

						<!-- right click context menu -->
						<DataGrid.ContextMenu>
							<ContextMenu>
								<MenuItem Header="Copy Unity Version" />
							</ContextMenu>
						</DataGrid.ContextMenu>

						<!-- sample data for testing -->
						<local:UnityInstallation Version="3000.1.2f1" Path="c:/proggies/unity3000" Installed="12.12.2020" />
					</DataGrid>

					<!-- bottom buttoms row -->
					<Grid VerticalAlignment="Bottom" Margin="4,0,8,5">
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="20*" />
							<ColumnDefinition Width="45*" />
							<ColumnDefinition Width="15*" />
						</Grid.ColumnDefinitions>
						<Grid.RowDefinitions>
							<RowDefinition Height="32" />
						</Grid.RowDefinitions>
						<Button Grid.Column="0" Style="{StaticResource CustomButton}" x:Name="btnRunUnity" Background="{DynamicResource ButtonBackground}" Foreground="{DynamicResource ButtonForeground}" Margin="5,0,0,0" BorderBrush="{x:Null}">
							<Label Foreground="{DynamicResource ButtonForeground}">_Upgrade</Label>
						</Button>
						<Button Grid.Column="1" Style="{StaticResource CustomButton}" x:Name="btnReleaseNotes" Background="{DynamicResource ButtonBackground}" Foreground="{DynamicResource ButtonForeground}" Margin="8,0,0,0" BorderBrush="{x:Null}" >
							<Label Foreground="{DynamicResource ButtonForeground}">_Run Unity</Label>
						</Button>
						<Button Grid.Column="3" Style="{StaticResource CustomButton}" x:Name="btnExploreUnity" Background="{DynamicResource ButtonBackground}" Margin="8,0,0,0" BorderBrush="{x:Null}" Foreground="{DynamicResource ButtonForeground}" >
							<Label Foreground="{DynamicResource ButtonForeground}">_Explore</Label>
						</Button>

					</Grid>
				</Grid>
			</TabItem>

			<!-- Tab: Updates -->
			<TabItem Header="Updates" Style="{DynamicResource TabItemStyle1}" Padding="0,0,0,0" Margin="-1,1,1,-1" BorderBrush="{x:Null}" Background="Black" >
				<Grid>
					<!-- search box -->
					<Grid Background="{DynamicResource TextBoxBackground}" HorizontalAlignment="Left" VerticalAlignment="Top" Width="222" Margin="6,5,0,0" Height="20"  >
						<TextBlock Margin="3,2" MinWidth="100" Text="Search" Foreground="#7F919191" Visibility="{Binding ElementName=txtSearchBoxUpdates, Path=Text.IsEmpty, Converter={StaticResource MyBoolToVisibilityConverter}}" Height="24" />
						<TextBox MinWidth="100" CaretBrush="#FFE2E2E2" Name="txtSearchBoxUpdates" Background="Transparent" BorderBrush="{x:Null}" Foreground="#FFC7C7C7" SelectionBrush="#FF003966" BorderThickness="0" Margin="2,2,0,0" UndoLimit="64" />
						<Button Name="btnClearUpdatesSearch" Style="{StaticResource {x:Static ToolBar.ButtonStyleKey}}" BorderThickness="0"  HorizontalAlignment="Right" VerticalAlignment="Top" Height="23" Width="23" Background="Transparent" Padding="0,2" Visibility="Visible" BorderBrush="{x:Null}" Click="OnClearUpdateSearchClick">
							<TextBlock Text="❌" FontSize="8" Foreground="#FFC3C3C3" Padding="5,3,4,4" HorizontalAlignment="Center">
								<TextBlock.Style>
									<Style TargetType="TextBlock">
										<Style.Triggers>
											<DataTrigger Binding="{Binding ElementName=txtSearchBoxUpdates, Path=Text}" Value="">
												<Setter Property="Visibility" Value="Hidden"/>

											</DataTrigger>
											<DataTrigger Binding="{Binding ElementName=txtSearchBoxUpdates, Path=Text}" Value="{x:Null}">
												<Setter Property="Visibility" Value="Hidden"/>
											</DataTrigger>
										</Style.Triggers>
									</Style>
								</TextBlock.Style>
							</TextBlock>
						</Button>
					</Grid>

					<Button Style="{StaticResource CustomButton}" ToolTip="Refresh installations (F5)" x:Name="btnRefreshUpdatesList" Content="⟳" Height="22" Width="22" HorizontalAlignment="Right" VerticalAlignment="Top" FontSize="16" Background="#FF3F3F46" Foreground="#FFC1C1C1" Margin="0,4,3,0" Padding="1,-2,1,1" BorderBrush="{x:Null}" Click="OnGetUnityUpdatesClick"/>

					<DataGrid x:Name="dataGridUpdates"  SelectionMode="Single" Margin="4,30,2,42" Background="{x:Null}" BorderBrush="{x:Null}" ColumnHeaderStyle="{StaticResource HeaderStyle}" Padding="0" HorizontalScrollBarVisibility="Disabled" HeadersVisibility="Column" Foreground="#FFD8D8D8" HorizontalGridLinesBrush="#4C000000" VerticalGridLinesBrush="#19000000" AutoGenerateColumns="False">

						<DataGrid.Columns>
							<DataGridTextColumn Binding="{Binding ReleaseDate,StringFormat=\{0:dd/MM/yyyy\}}" ClipboardContentBinding="{x:Null}" Header="ReleaseDate" IsReadOnly="True"/>
							<DataGridTextColumn Binding="{Binding Version}" ClipboardContentBinding="{x:Null}" Header="Version" IsReadOnly="True" MinWidth="123"/>
						</DataGrid.Columns>

						<!-- right click context menu -->
						<DataGrid.ContextMenu>
							<ContextMenu>
								<MenuItem Header="Copy Unity Version" />
							</ContextMenu>
						</DataGrid.ContextMenu>
						<local:Updates ReleaseDate="2020-10-10" Version="5000.1.2.3"/>

						<!-- sample data for testing -->
					</DataGrid>

					<!-- bottom buttoms row -->
					<Grid VerticalAlignment="Bottom" Margin="4,0,8,5">
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="20*" />
							<ColumnDefinition Width="45*" />
						</Grid.ColumnDefinitions>
						<Grid.RowDefinitions>
							<RowDefinition Height="32" />
						</Grid.RowDefinitions>
						<Button Grid.Column="0" Style="{StaticResource CustomButton}" x:Name="btnDonwloadInBrowser" Background="{DynamicResource ButtonBackground}" Foreground="{DynamicResource ButtonForeground}" Margin="5,0,0,0" BorderBrush="{x:Null}">
							<Label Foreground="{DynamicResource ButtonForeground}">_Download in browser</Label>
						</Button>
						<Button Grid.Column="1" Style="{StaticResource CustomButton}" x:Name="btnOpenWebsite" Background="{DynamicResource ButtonBackground}" Foreground="{DynamicResource ButtonForeground}" Margin="8,0,0,0" BorderBrush="{x:Null}" >
							<Label Foreground="{DynamicResource ButtonForeground}">_Release Notes</Label>
						</Button>
					</Grid>
				</Grid>

			</TabItem>

			<!-- Tab: Tools -->
			<TabItem Header="Tools" Style="{DynamicResource TabItemStyle1}" Padding="0,0,0,0" Margin="-1,1,1,-1" BorderBrush="{x:Null}" Background="Black">
				<Grid>
					<Grid.RowDefinitions>
						<RowDefinition Height="50*" />
						<RowDefinition Height="50*" />
					</Grid.RowDefinitions>
					<!-- 1st part -->

					<!-- 2nd part -->
					<Grid Grid.Row="1" VerticalAlignment="Top" HorizontalAlignment="Left">
						<Border>
							<StackPanel Orientation="Horizontal" Margin="10">
								<Button Style="{StaticResource CustomButton}" x:Name="btnTemp1" Background="{DynamicResource ButtonBackground}" Foreground="{DynamicResource ButtonForeground}" Margin="5,0,0,0" BorderBrush="{x:Null}" HorizontalAlignment="Left" VerticalAlignment="Top">
									<Label Foreground="{DynamicResource ButtonForeground}">_Editor Logs</Label>
								</Button>
								<Button Style="{StaticResource CustomButton}" x:Name="btnTemp2" Background="{DynamicResource ButtonBackground}" Foreground="{DynamicResource ButtonForeground}" Margin="5,0,0,0" BorderBrush="{x:Null}" HorizontalAlignment="Left" VerticalAlignment="Top">
									<Label Foreground="{DynamicResource ButtonForeground}">_Player Logs</Label>
								</Button>
								<Button Style="{StaticResource CustomButton}" x:Name="btnTemp3" Background="{DynamicResource ButtonBackground}" Foreground="{DynamicResource ButtonForeground}" Margin="5,0,0,0" BorderBrush="{x:Null}" HorizontalAlignment="Left" VerticalAlignment="Top">
									<Label Foreground="{DynamicResource ButtonForeground}">_ADB logcat</Label>
								</Button>
								<Button Style="{StaticResource CustomButton}" x:Name="btnTemp4" Background="{DynamicResource ButtonBackground}" Foreground="{DynamicResource ButtonForeground}" Margin="5,0,0,0" BorderBrush="{x:Null}" HorizontalAlignment="Left" VerticalAlignment="Top">
									<Label Foreground="{DynamicResource ButtonForeground}">_Bind Wifi</Label>
								</Button>
							</StackPanel>
						</Border>
					</Grid>
				</Grid>
			</TabItem>

			<!-- Tab: Settings -->
			<TabItem Header="Settings" Style="{DynamicResource TabItemStyle1}" Padding="0,0,0,0" Margin="-1,1,1,-1" BorderBrush="{x:Null}" Background="Black">
				<Grid>
					<Grid.RowDefinitions>
						<!-- top labels-->
						<RowDefinition Height="28" />
						<!-- install locations list box -->
						<RowDefinition Height="30*" />
						<!-- list buttons -->
						<RowDefinition Height="33" />
						<!-- settings -->
						<RowDefinition Height="70*" />
						<!-- links -->
						<RowDefinition Height="33" />
					</Grid.RowDefinitions>

					<!-- top labels -->
					<Label Grid.Row="0" Content="Unity Installation Parent Folders" Foreground="{DynamicResource ButtonForeground}" HorizontalAlignment="Left" VerticalAlignment="Bottom"></Label>
					<Label Grid.Row="0" Content="Found .. Installations" Foreground="{DynamicResource ButtonForeground}" HorizontalAlignment="Right" VerticalAlignment="Bottom"></Label>
					<!-- locations list -->
					<ListBox Grid.Row="1" Background="#FF3C3C3C" Margin="4,0,2,0" />
					<!-- locations add/remove -->
					<StackPanel Grid.Row="2" Orientation="Horizontal" Margin="0" >
						<Button Style="{StaticResource CustomButton}" x:Name="btnASASDFasdf" Background="{DynamicResource ButtonBackground}" Foreground="{DynamicResource ButtonForeground}" Margin="5,0,0,0" BorderBrush="{x:Null}" HorizontalAlignment="Left" VerticalAlignment="Center">
							<Label Foreground="{DynamicResource ButtonForeground}">_Add Folder</Label>
						</Button>
						<Button Style="{StaticResource CustomButton}" x:Name="btnASASDFasdf2" Background="{DynamicResource ButtonBackground}" Foreground="{DynamicResource ButtonForeground}" Margin="5,0,0,0" BorderBrush="{x:Null}" HorizontalAlignment="Left" VerticalAlignment="Center">
							<Label Foreground="{DynamicResource ButtonForeground}">_Remove Folder</Label>
						</Button>
					</StackPanel>
					<!-- settings-->
					<StackPanel Grid.Row="3" Orientation="Vertical" Margin="5,10,3,3" >
						<CheckBox Content="Minimize to taskbar" Foreground="{DynamicResource ButtonForeground}"></CheckBox>
						<CheckBox Content="Register Explorer context menu" Foreground="{DynamicResource ButtonForeground}"></CheckBox>
						<CheckBox Content="Close after opening project" Foreground="{DynamicResource ButtonForeground}"></CheckBox>
						<CheckBox Content="Close after launching from Explorer" Foreground="{DynamicResource ButtonForeground}"></CheckBox>
						<CheckBox Content="Show Arguments Column" Foreground="{DynamicResource ButtonForeground}"></CheckBox>
						<CheckBox Content="Show Git Branch Column" Foreground="{DynamicResource ButtonForeground}"></CheckBox>
						<CheckBox Content="Show full modified time" Foreground="{DynamicResource ButtonForeground}" ToolTip="Full=dd/mm/yyyy hh:mm:ss, NotFull=x hours ago, x days ago.."></CheckBox>
					</StackPanel>

					<!-- links-->
					<Button Grid.Row="4" Style="{StaticResource CustomButton}" x:Name="btnASASDFasdf22" Background="{DynamicResource ButtonBackground}" Foreground="{DynamicResource ButtonForeground}" Margin="5,0,0,0" BorderBrush="{x:Null}" HorizontalAlignment="Left" VerticalAlignment="Center">
						<Label Foreground="{DynamicResource ButtonForeground}">_View in Github</Label>
					</Button>

				</Grid>
			</TabItem>
		</TabControl>

		<Grid Grid.Row="2" UseLayoutRounding="False">
			<StatusBar VerticalAlignment="Bottom" Margin="3,1,20,1" Background="{x:Null}" Foreground="#FF595959">
				<TextBlock Margin="6,1,3,0"  VerticalAlignment="Center" Text="Ready"/>
			</StatusBar>
		</Grid>
	</Grid>
</Window>
