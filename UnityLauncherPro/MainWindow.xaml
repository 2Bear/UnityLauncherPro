<Window
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:UnityLauncherPro"
		xmlns:System="clr-namespace:System;assembly=mscorlib" x:Class="UnityLauncherPro.MainWindow"
		mc:Ignorable="d"
        Title="UnityLauncherPro" Height="650" Width="600" WindowStartupLocation="CenterScreen" Background="{DynamicResource DarkestBackground}" MinWidth="600" MinHeight="650" AllowsTransparency="True" WindowStyle="None" Margin="0" KeyDown="OnWindowKeyDown" Closing="Window_Closing" SizeChanged="Window_SizeChanged" Icon="Images/icon.ico" Activated="Window_Activated">
	<Window.Resources>

		<!-- colors for unity missing installatios -->
		<local:UnityInstallation x:Key="MyConverter"/>

		<!-- tabs -->
		<Style x:Key="TabItemStyle1" TargetType="{x:Type TabItem}">
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type TabItem}">
						<Border x:Name="Border" BorderThickness="0"
                        Padding="15,5,15,5" Margin="1,0,0,0" BorderBrush="{x:Null}">
							<ContentPresenter x:Name="ContentSite" ContentSource="Header" />
						</Border>
						<ControlTemplate.Triggers>
							<Trigger Property="IsSelected" Value="False">
								<Setter Property="TextElement.Foreground" TargetName="ContentSite" Value="{StaticResource DeactiveTabForeground}"/>
								<Setter TargetName="Border" Property="Background" Value="{StaticResource DeactiveTabBackground}" />
							</Trigger>
							<Trigger Property="IsSelected" Value="True">
								<Setter Property="TextElement.Foreground" TargetName="ContentSite" Value="{StaticResource ButtonWhiteText}"/>
								<Setter TargetName="Border" Property="Background" Value="{StaticResource MainBackgroundColor}"/>
							</Trigger>
							<Trigger Property="IsMouseOver" Value="True">
								<Setter TargetName="Border" Property="Background" Value="{StaticResource MainBackgroundColor}"/>
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>

		<!-- datagrid header -->
		<Style x:Key="HeaderStyle" TargetType="{x:Type DataGridColumnHeader}">
			<Setter Property="Background" Value="{StaticResource DatagridHeaderBackground}" />
			<Setter Property="Foreground" Value="{StaticResource DatagridHeaderForeground}" />
			<Setter Property="BorderBrush" Value="{StaticResource DatagridHeaderBorder}" />
			<Setter Property="BorderThickness" Value="0,0,1,1" />
			<Setter Property="SnapsToDevicePixels" Value="True" />
			<Setter Property="HorizontalContentAlignment" Value="Left" />
			<Setter Property="Height" Value="28" />
			<Setter Property="Padding" Value="6,2,2,2" />
			<Style.Triggers>
				<Trigger Property="IsMouseOver" Value="True">
					<Setter Property="Background" Value="{StaticResource ButtonBackground}"/>
				</Trigger>
			</Style.Triggers>
		</Style>

		<!-- datagrid rows & row selection -->
		<Style TargetType="{x:Type DataGridRow}">
			<Setter Property="Background" Value="{StaticResource ButtonBackground}" />
			<Setter Property="BorderBrush" Value="{x:Null}" />
			<Setter Property="BorderThickness" Value="0,0,0,0" />
			<Style.Triggers>
				<Trigger Property="IsMouseOver" Value="True">
					<Setter Property="Background" Value="{StaticResource DataGridRowMouseOver}"/>
				</Trigger>
				<Trigger Property="IsSelected" Value="True">
					<Setter Property="Background" Value="{StaticResource DataGridRowSelectedBackground}" />
				</Trigger>
			</Style.Triggers>
			<Style.Resources>
				<SolidColorBrush x:Key="{x:Static SystemColors.InactiveSelectionHighlightBrushKey}" Color="{DynamicResource {x:Static SystemColors.HighlightColorKey}}"/>
			</Style.Resources>
		</Style>

		<!-- datagrid hide selected cell borders -->
		<Style TargetType="{x:Type DataGridCell}">
			<Setter Property="BorderBrush" Value="Transparent" />
			<Setter Property="FocusVisualStyle" Value="{x:Null}" />
			<Setter Property="Margin" Value="0,0.5,0,0.5" />
			<Style.Triggers>
				<Trigger Property="IsSelected" Value="True">
					<Setter Property="Background" Value="Transparent" />
				</Trigger>
				<Trigger Property="IsSelected" Value="False">
					<Setter Property="Background" Value="Transparent" />
				</Trigger>
			</Style.Triggers>
		</Style>

		<Style x:Key="NoFocusCellStyle" TargetType="{x:Type DataGridCell}">
			<!--<Setter Property="Focusable" Value="False"/>-->
		</Style>

		<!-- custom buttons -->
		<Style x:Key="CustomButton" TargetType="{x:Type Button}">
			<Setter Property="SnapsToDevicePixels" Value="true"/>
			<Setter Property="OverridesDefaultStyle" Value="true"/>
			<Setter Property="Background" Value="{DynamicResource ButtonBackground}"/>
			<Setter Property="Foreground" Value="{DynamicResource ButtonForeground}"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type Button}">
						<Border x:Name="shortcutbutton" BorderThickness="0" BorderBrush="Black" Background="{TemplateBinding Background}">
							<ContentPresenter Margin="0" HorizontalAlignment="Center" VerticalAlignment="Center" RecognizesAccessKey="True"/>
						</Border>
						<ControlTemplate.Triggers>
							<Trigger Property="IsEnabled" Value="False">
								<Setter Property="Foreground" Value="{StaticResource ButtonForegroundDisabled}" />
							</Trigger>
							<Trigger Property="IsMouseOver" Value="true">
								<Setter TargetName="shortcutbutton" Property="Background" Value="{StaticResource ButtonBackgroundMouseOver}" />
								<Setter Property="TextElement.Foreground" TargetName="shortcutbutton" Value="{StaticResource ButtonWhiteText}"/>
							</Trigger>
							<Trigger Property="IsPressed" Value="true">
								<Setter TargetName="shortcutbutton" Property="Background" Value="{StaticResource ButtonBackgroundPressed}" />
								<Setter Property="TextElement.Foreground" TargetName="shortcutbutton" Value="{StaticResource ButtonWhiteText}"/>
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>

		<!-- scrollbar top/bottom arrow buttons -->
		<Style x:Key="ScrollBarLineButton" TargetType="{x:Type RepeatButton}">
			<Setter Property="SnapsToDevicePixels" Value="True"/>
			<Setter Property="OverridesDefaultStyle" Value="true"/>
			<Setter Property="Focusable" Value="false"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type RepeatButton}">
						<!-- button background -->
						<Border x:Name="Border" Margin="1" CornerRadius="0" BorderThickness="0" Background="{DynamicResource ButtonBackground}" BorderBrush="{x:Null}">
							<!-- arrow sign -->
							<Path HorizontalAlignment="Center" VerticalAlignment="Center" Fill="{DynamicResource ScrollArrowForeground}" Data="{Binding Content, RelativeSource={RelativeSource TemplatedParent}}" />
						</Border>
						<ControlTemplate.Triggers>
							<!-- NOTE order matters, if pressed is before mouseover, then it gets overwritten -->
							<Trigger Property="IsMouseOver" Value="true">
								<Setter TargetName="Border" Property="Background" Value="{StaticResource TextBoxBackground}" />
							</Trigger>
							<Trigger Property="IsPressed" Value="true">
								<Setter TargetName="Border" Property="Background" Value="{StaticResource ScrollArrowPressed}" />
							</Trigger>
							<Trigger Property="IsEnabled" Value="false">
								<Setter Property="Foreground" Value="{StaticResource ScrollBarEnabledForeground}"/>
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>

		<Style x:Key="ScrollBarPageButton" TargetType="{x:Type RepeatButton}">
			<Setter Property="SnapsToDevicePixels" Value="True"/>
			<Setter Property="OverridesDefaultStyle" Value="true"/>
			<Setter Property="IsTabStop" Value="false"/>
			<Setter Property="Focusable" Value="false"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type RepeatButton}">
						<Border Background="Transparent" />
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>

		<!-- scroll thumb (elevator) bar -->
		<Style x:Key="ScrollBarThumb" TargetType="{x:Type Thumb}">
			<Setter Property="SnapsToDevicePixels" Value="True"/>
			<Setter Property="OverridesDefaultStyle" Value="true"/>
			<Setter Property="IsTabStop" Value="false"/>
			<Setter Property="Focusable" Value="false"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type Thumb}">
						<Border x:Name="Border" CornerRadius="0" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1" />
						<ControlTemplate.Triggers>
							<Trigger Property="IsMouseOver" Value="true">
								<Setter TargetName="Border" Property="Background" Value="{StaticResource ScrollBarThumbFill}" />
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>

		<ControlTemplate x:Key="VerticalScrollBar" TargetType="{x:Type ScrollBar}">
			<Grid >
				<Grid.RowDefinitions>
					<RowDefinition MaxHeight="18"/>
					<RowDefinition Height="0.00001*"/>
					<RowDefinition MaxHeight="18"/>
				</Grid.RowDefinitions>
				<!-- scrollbar background -->
				<Border Grid.RowSpan="3" CornerRadius="0" Background="{DynamicResource ScrollBarBackground}" />
				<!-- scrollbar top button -->
				<RepeatButton Grid.Row="0" Style="{StaticResource ScrollBarLineButton}" Height="18" Command="ScrollBar.LineUpCommand"  Content="M 0 4 L 8 4 L 4 0 Z" />
				<Track x:Name="PART_Track" Grid.Row="1" IsDirectionReversed="true">
					<Track.DecreaseRepeatButton>
						<RepeatButton Style="{StaticResource ScrollBarPageButton}" Command="ScrollBar.PageUpCommand" />
					</Track.DecreaseRepeatButton>
					<Track.Thumb>
						<!-- scrollbar foreground -->
						<Thumb Style="{StaticResource ScrollBarThumb}" Margin="1,0,1,0" Background="{DynamicResource ScrollBarFill}" BorderBrush="{x:Null}"/>
					</Track.Thumb>
					<Track.IncreaseRepeatButton>
						<RepeatButton Style="{StaticResource ScrollBarPageButton}" Command="ScrollBar.PageDownCommand" />
					</Track.IncreaseRepeatButton>
				</Track>
				<!-- scrollbar bottom button -->
				<RepeatButton Grid.Row="3" Style="{StaticResource ScrollBarLineButton}" Height="18" Command="ScrollBar.LineDownCommand" Content="M 0 0 L 4 4 L 8 0 Z" />
			</Grid>
		</ControlTemplate>

		<Style x:Key="{x:Type ScrollBar}" TargetType="{x:Type ScrollBar}">
			<Setter Property="SnapsToDevicePixels" Value="True"/>
			<Setter Property="OverridesDefaultStyle" Value="true"/>
			<Style.Triggers>
				<Trigger Property="Orientation" Value="Vertical">
					<Setter Property="Width" Value="18"/>
					<Setter Property="Height" Value="Auto" />
					<Setter Property="Template" Value="{StaticResource VerticalScrollBar}" />
				</Trigger>
			</Style.Triggers>
		</Style>

		<BooleanToVisibilityConverter x:Key="MyBoolToVisibilityConverter" />

	</Window.Resources>


	<!-- UI -->

	<Grid Margin="0">
		<Grid.RowDefinitions>
			<RowDefinition Height="23" />
			<RowDefinition Height="*" />
			<RowDefinition Height="25" />
		</Grid.RowDefinitions>

		<!-- menubar -->
		<Grid Grid.Row="0" UseLayoutRounding="False">
			<Rectangle Fill="{DynamicResource DarkMenuBar}" MouseDown="OnRectangleMouseDown" />
			<Image Source="Images/icon.png" RenderOptions.BitmapScalingMode="NearestNeighbor" HorizontalAlignment="Left" Width="16" Height="16" Margin="4,0,0,0" SnapsToDevicePixels="True" UseLayoutRounding="True" />
			<Label Content="UnityLauncherPro" IsHitTestVisible="False" Margin="19,0,0,-5"  Foreground="{DynamicResource MainTitle}" FontSize="12" HorizontalAlignment="Left"  />
			<!-- minimize -->
			<Button x:Name="btnMinimize" BorderThickness="0" Style="{StaticResource {x:Static ToolBar.ButtonStyleKey}}" HorizontalAlignment="Right" VerticalAlignment="Top" Height="23" Width="23" Background="Transparent" Click="BtnMinimize_Click" Margin="0,0,27,0" Padding="2,0,2,8" IsTabStop="False">
				<TextBlock Text="–" FontSize="15" Foreground="{DynamicResource WindowMinClose}" Padding="0" Height="23" HorizontalAlignment="Center"/>
			</Button>
			<!-- close -->
			<Button x:Name="btnClose" BorderThickness="0" Style="{StaticResource {x:Static ToolBar.ButtonStyleKey}}" HorizontalAlignment="Right" VerticalAlignment="Top" Height="23" Width="23" Background="Transparent" Click="BtnClose_Click" Padding="0,2" IsTabStop="False">
				<TextBlock Text="❌" FontSize="10" Foreground="{DynamicResource WindowMinClose}" Padding="5,3,4,4" HorizontalAlignment="Center" />
			</Button>
		</Grid>

		<!-- main content : Tabs -->
		<TabControl Grid.Row="1" x:Name="tabControl"  Background="{DynamicResource MainBackgroundColor}" BorderBrush="{x:Null}" Padding="0" Margin="0" SelectionChanged="OnTabSelectionChanged">

			<!-- Tab: Projects-->
			<TabItem Header="Projects" Style="{DynamicResource TabItemStyle1}" Padding="0,0,0,0" Margin="-1,1,1,-1" BorderBrush="{x:Null}">
				<Grid>
					<!-- search box -->
					<Grid Background="{DynamicResource TextBoxBackground}" HorizontalAlignment="Left" VerticalAlignment="Top" Width="222" Margin="6,5,0,0" Height="20"  >
						<TextBlock Margin="3,2" MinWidth="100" Text="Search" Foreground="{DynamicResource SearchPlaceholder}" Visibility="{Binding Text.IsEmpty, Converter={StaticResource MyBoolToVisibilityConverter}, ElementName=txtSearchBox}" Height="24" />
						<TextBox MinWidth="100" CaretBrush="{DynamicResource SearchCaret}" x:Name="txtSearchBox" Background="Transparent" BorderBrush="{x:Null}" Foreground="{DynamicResource SearchForeground}" SelectionBrush="{DynamicResource SearchSelection}" BorderThickness="0" Margin="2,2,0,0" UndoLimit="64" TextChanged="OnSearchTextChanged" PreviewKeyDown="TxtSearchBox_PreviewKeyDown" TabIndex="1" />
						<Button x:Name="btnClearSearch" Style="{StaticResource {x:Static ToolBar.ButtonStyleKey}}"  BorderThickness="0"  HorizontalAlignment="Right" VerticalAlignment="Top" Height="23" Width="23" Background="Transparent" Padding="0,2"  BorderBrush="{x:Null}" Click="OnClearProjectSearchClick" IsTabStop="False">
							<!--<Button.Style>
								<Style TargetType="{x:Type Button}">
									<Style.Triggers>
										<DataTrigger Binding="{Binding Text, ElementName=txtSearchBox}" Value="">
											<Setter Property="Visibility" Value="Hidden"/>
										</DataTrigger>
										<DataTrigger Binding="{Binding Text, ElementName=txtSearchBox}" Value="{x:Null}">
											<Setter Property="Visibility" Value="Hidden"/>
										</DataTrigger>
									</Style.Triggers>
								</Style>
							</Button.Style>-->
							<TextBlock Text="❌" FontSize="8" Foreground="{DynamicResource SearchClose}" Padding="5,3,4,4" HorizontalAlignment="Center">
								<TextBlock.Style>
									<Style TargetType="{x:Type TextBlock}">
										<Style.Triggers>
											<DataTrigger Binding="{Binding Text, ElementName=txtSearchBox}" Value="">
												<Setter Property="Visibility" Value="Hidden"/>
											</DataTrigger>
											<DataTrigger Binding="{Binding Text, ElementName=txtSearchBox}" Value="{x:Null}">
												<Setter Property="Visibility" Value="Hidden"/>
											</DataTrigger>
										</Style.Triggers>
									</Style>
								</TextBlock.Style>
							</TextBlock>
						</Button>
					</Grid>

					<Button Style="{StaticResource CustomButton}" ToolTip="Add existing project" x:Name="btnAddProjectFolder" Content="Add Project.." Height="22" Width="78" HorizontalAlignment="Right" VerticalAlignment="Top"  Margin="0,4,34,0" Click="BtnAddProjectFolder_Click" BorderBrush="{x:Null}" TabIndex="10" />
					<Button Style="{StaticResource CustomButton}" ToolTip="Refresh list (F5)" x:Name="btnRefreshProjectList" Content="⟳" Height="22" Width="22" HorizontalAlignment="Right" VerticalAlignment="Top" FontSize="16"  Margin="0,4,3,0" Padding="1,-2,1,1" BorderBrush="{x:Null}" Click="BtnRefreshProjectList_Click" TabIndex="11"/>

					<DataGrid x:Name="gridRecent" SelectionMode="Single" Margin="4,30,2,42" CanUserAddRows="False" Background="{x:Null}" BorderBrush="{x:Null}" ColumnHeaderStyle="{StaticResource HeaderStyle}" Padding="0" HorizontalScrollBarVisibility="Disabled" HeadersVisibility="Column" Foreground="{DynamicResource GridForeground}" HorizontalGridLinesBrush="{DynamicResource GridHorizontalGridLines}" VerticalGridLinesBrush="{DynamicResource GridVerticalGridLines}" AutoGenerateColumns="False" PreviewKeyDown="GridRecent_PreviewKeyDown" Loaded="GridRecent_Loaded" TabIndex="2" CellEditEnding="GridRecent_CellEditEnding" PreviewMouseDoubleClick="GridRecent_PreviewMouseDoubleClick" BeginningEdit="GridRecent_BeginningEdit" ContextMenuOpening="GridRecent_ContextMenuOpening" >
						<DataGrid.CommandBindings>
							<CommandBinding Command="ApplicationCommands.Copy" Executed="CopyRowFolderToClipBoard" CanExecute="CanExecute_Copy"/>
							<CommandBinding Command="{x:Static local:MainWindow.KillProcessCommand}" Executed="KillSelectedProcess"/>
						</DataGrid.CommandBindings>

						<DataGrid.Columns>
							<DataGridTextColumn x:Name="txtColumnTitle"  CellStyle="{StaticResource NoFocusCellStyle}" Binding="{Binding Title}" ClipboardContentBinding="{x:Null}" Header="Project" IsReadOnly="True" Width="150"/>
							<DataGridTextColumn Binding="{Binding Version}" ClipboardContentBinding="{x:Null}" Header="Version" IsReadOnly="True" Width="72">
								<DataGridTextColumn.CellStyle>
									<Style TargetType="{x:Type DataGridCell}">
										<Setter Property="Foreground" Value="{StaticResource GridRedText}" />
										<Style.Triggers>
											<DataTrigger Binding="{Binding Version, Converter={StaticResource MyConverter}}" Value="true">
												<Setter Property="Foreground" Value="{StaticResource GridGreenText}" />
											</DataTrigger>
										</Style.Triggers>
									</Style>
								</DataGridTextColumn.CellStyle>
							</DataGridTextColumn>
							<DataGridTextColumn x:Name="txtColumnName" CellStyle="{StaticResource NoFocusCellStyle}" Binding="{Binding Path}" ClipboardContentBinding="{x:Null}" Header="Path" IsReadOnly="True" Width="185"/>
							<DataGridTextColumn CellStyle="{StaticResource NoFocusCellStyle}" Binding="{Binding Modified, StringFormat=\{0:dd/MM/yyyy HH:mm:ss\}}" ClipboardContentBinding="{x:Null}" Header="Modified" IsReadOnly="True" Width="120"/>
							<DataGridTextColumn CellStyle="{StaticResource NoFocusCellStyle}" Binding="{Binding Arguments}" ClipboardContentBinding="{x:Null}" Header="Arguments" IsReadOnly="False" Width="100"/>
							<DataGridTextColumn CellStyle="{StaticResource NoFocusCellStyle}" Binding="{Binding GITBranch}" ClipboardContentBinding="{x:Null}" Header="Branch" IsReadOnly="True" Width="100"/>
							<!--TODO platform as dropdown?-->
							<DataGridTextColumn CellStyle="{StaticResource NoFocusCellStyle}" Binding="{Binding TargetPlatform}" ClipboardContentBinding="{x:Null}" Header="Platform" IsReadOnly="True" Width="100"/>
						</DataGrid.Columns>

						<!-- right click context menu -->
						<DataGrid.ContextMenu>
							<ContextMenu>
								<MenuItem x:Name="menuItemCopyVersion" Header="Copy Unity Version" Click="MenuItemCopyVersion_Click" />
								<MenuItem x:Name="menuItemCopyPath" Header="Copy Project Path" Click="MenuItemCopyPath_Click" />
								<MenuItem x:Name="menuItemShowProjectInExplorer" Header="Show in Explorer" Click="MenuItemShowProjectInExplorer_Click" />
								<Separator/>
								<MenuItem x:Name="menuItemKillProcess" Header="Kill Process" Click="MenuItemKillProcess_Click" />
							</ContextMenu>
						</DataGrid.ContextMenu>

						<!-- sample data for testing -->
						<local:Project GITBranch="" Modified="" Title="M dfgh dfghMO" Path="A:/temp" Version="2099.1.2.3"/>
						<local:Project GITBranch="" Modified="" Title="asdgdfg" Path="A:/temp" Version="5.6.7f1"/>
						<local:Project GITBranch="" Modified="" Title="Mghdfghdf dfghdfgMO" Path="A:/temp" Version="2018.3.13f1"/>
						<local:Project GITBranch="" Modified="" Title="MMO" Path="A:/temp" Version="2099.1.2.3"/>
						<local:Project GITBranch="" Modified="" Title="fghdhdfgh" Path="A:/temp" Version="2018.3.13f1"/>
						<local:Project GITBranch="" Modified="" Title="MdfMO" Path="A:/temp" Version="2099.1.2.3"/>
						<local:Project GITBranch="" Modified="" Title="MMO" Path="A:/temp" Version="2099.1.2.3"/>
						<local:Project GITBranch="" Modified="" Title="MdfgMO" Path="A:/temp" Version="2099.1.2.3"/>
						<local:Project GITBranch="" Modified="" Title="MMO" Path="A:/temp" Version="2099.1.2.3"/>
						<local:Project GITBranch="" Modified="" Title="MdfghMO" Path="A:/temp" Version="2099.1.2.3"/>
						<local:Project GITBranch="" Modified="" Title="MMO" Path="A:/temp" Version="2099.1.2.3"/>
						<local:Project GITBranch="" Modified="" Title="MMO" Path="A:/temp" Version="5.6.7f1"/>
						<local:Project GITBranch="" Modified="" Title="ddfghfghdfgh" Path="A:/temp" Version="2099.1.2.3"/>
						<local:Project GITBranch="" Modified="" Title="MMO" Path="A:/temp" Version="2099.1.2.3"/>
						<local:Project GITBranch="" Modified="" Title="MMO" Path="A:/temp" Version="2018.3.13f1"/>
						<local:Project GITBranch="" Modified="" Title="MMO" Path="A:/temp" Version="2099.1.2.3"/>
						<local:Project GITBranch="" Modified="" Title="MMdfghO" Path="A:/temp" Version="2099.1.2.3"/>
						<local:Project GITBranch="" Modified="" Title="MMO" Path="A:/temp" Version="2099.1.2.3"/>
						<local:Project GITBranch="" Modified="" Title="MdfghMO" Path="A:/temp" Version="2099.1.2.3"/>
						<local:Project GITBranch="" Modified="" Title="MMO" Path="A:/temp" Version="2099.1.2.3"/>
						<local:Project GITBranch="" Modified="" Title="MMO" Path="A:/temp" Version="2099.1.2.3"/>
						<local:Project GITBranch="" Modified="" Title="dfgh" Path="A:/temp" Version="5.6.7f1"/>
						<local:Project GITBranch="" Modified="" Title="MMO" Path="A:/temp" Version="2018.3.13f1"/>
						<local:Project GITBranch="" Modified="" Title="MMO" Path="A:/temp" Version="2099.1.2.3"/>
						<local:Project GITBranch="" Modified="" Title="MMO" Path="A:/temp" Version="2099.1.2.3"/>
						<local:Project GITBranch="" Modified="" Title="Mdfg hMO" Path="A:/temp" Version="2099.1.2.3"/>
						<local:Project GITBranch="" Modified="" Title="MMO" Path="A:/temp" Version="2099.1.2.3"/>
						<local:Project GITBranch="" Modified="" Title="MMO" Path="A:/temp" Version="2099.1.2.3"/>
						<local:Project GITBranch="" Modified="" Title="MMd fghO" Path="A:/temp" Version="2099.1.2.3"/>
						<local:Project GITBranch="" Modified="" Title="MMO" Path="A:/temp" Version="2099.1.2.3"/>
						<local:Project GITBranch="" Modified="" Title="MMdfg hO" Path="A:/temp" Version="2099.1.2.3"/>
						<local:Project GITBranch="" Modified="" Title="Md fghMO" Path="A:/temp" Version="2099.1.2.3"/>
					</DataGrid>

					<!-- bottom buttoms row -->
					<Grid VerticalAlignment="Bottom" Margin="4,0,8,5">
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="14*" />
							<ColumnDefinition Width="17*" />
							<ColumnDefinition Width="15*" />
							<ColumnDefinition Width="50*" />
							<ColumnDefinition Width="14*" />
						</Grid.ColumnDefinitions>
						<Grid.RowDefinitions>
							<RowDefinition Height="32" />
						</Grid.RowDefinitions>
						<Button Grid.Column="0" Style="{StaticResource CustomButton}" x:Name="btnUpgradeProject" Background="{DynamicResource ButtonBackground}" Margin="5,0,0,0" BorderBrush="{x:Null}" Click="BtnUpgradeProject_Click">
							<Label Content="_Upgrade" Foreground="{Binding Path=Foreground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Control}}}" />
						</Button>
						<Button Grid.Column="1" ToolTip="With selected Unity" Style="{StaticResource CustomButton}" x:Name="btnCreateEmptyProject" Background="{DynamicResource ButtonBackground}" Margin="8,0,0,0" BorderBrush="{x:Null}" Click="BtnCreateEmptyProject_Click" >
							<Label Content="_New Project" Foreground="{Binding Path=Foreground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Control}}}" />
						</Button>
						<Button Grid.Column="2" Style="{StaticResource CustomButton}" x:Name="btnLaunchUnity" Background="{DynamicResource ButtonBackground}" Margin="8,0,0,0" BorderBrush="{x:Null}" Click="BtnLaunchUnity_Click" >
							<Label Content="_Run Unity" Foreground="{Binding Path=Foreground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Control}}}" />
						</Button>
						<Button Grid.Column="3" Style="{StaticResource CustomButton}" x:Name="btnLaunchProject" Background="{DynamicResource ButtonBackground}" Margin="8,0,0,0" BorderBrush="{x:Null}" Click="BtnLaunchProject_Click" AutomationProperties.AccessKey="o" >
							<Label Content="_Open Project" Foreground="{Binding Path=Foreground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Control}}}" />
						</Button>
						<Button Grid.Column="4" Style="{StaticResource CustomButton}" x:Name="btnExplore" Background="{DynamicResource ButtonBackground}" Margin="8,0,0,0" BorderBrush="{x:Null}" Click="BtnExplore_Click" >
							<Label Content="_Explore" Foreground="{Binding Path=Foreground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Control}}}" />
						</Button>
					</Grid>
				</Grid>
			</TabItem>

			<!-- Tab: Unitys -->
			<TabItem Header="Editors" Style="{DynamicResource TabItemStyle1}" Padding="0,0,0,0" Margin="-1,1,1,-1" BorderBrush="{x:Null}" Background="Black">
				<Grid>
					<!-- search box -->
					<Grid Background="{DynamicResource TextBoxBackground}" HorizontalAlignment="Left" VerticalAlignment="Top" Width="222" Margin="6,5,0,0" Height="20"  >
						<TextBlock Margin="3,2" MinWidth="100" Text="Search" Foreground="{DynamicResource SearchPlaceholder}" Visibility="{Binding Text.IsEmpty, Converter={StaticResource MyBoolToVisibilityConverter}, ElementName=txtSearchBoxUnity}" Height="24" />
						<TextBox MinWidth="100" CaretBrush="{DynamicResource SearchCaret}" x:Name="txtSearchBoxUnity" Background="Transparent" BorderBrush="{x:Null}" Foreground="{DynamicResource SearchForeground}" SelectionBrush="{DynamicResource SearchSelection}" BorderThickness="0" Margin="2,2,0,0" UndoLimit="64" PreviewKeyDown="TxtSearchBoxUnity_PreviewKeyDown" TextChanged="TxtSearchBoxUnity_TextChanged" />
						<Button x:Name="btnClearUnitySearch" Style="{StaticResource {x:Static ToolBar.ButtonStyleKey}}" BorderThickness="0"  HorizontalAlignment="Right" VerticalAlignment="Top" Height="23" Width="23" Background="Transparent" Padding="0,2" Visibility="Visible" BorderBrush="{x:Null}" Click="OnClearUnitySearchClick">
							<TextBlock Text="❌" FontSize="8" Foreground="{DynamicResource SearchCaret}" Padding="5,3,4,4" HorizontalAlignment="Center">
								<TextBlock.Style>
									<Style TargetType="{x:Type TextBlock}">
										<Style.Triggers>
											<DataTrigger Binding="{Binding Text, ElementName=txtSearchBoxUnity}" Value="">
												<Setter Property="Visibility" Value="Hidden"/>
											</DataTrigger>
											<DataTrigger Binding="{Binding Text, ElementName=txtSearchBoxUnity}" Value="{x:Null}">
												<Setter Property="Visibility" Value="Hidden"/>
											</DataTrigger>
										</Style.Triggers>
									</Style>
								</TextBlock.Style>
							</TextBlock>
						</Button>
					</Grid>

					<Button Style="{StaticResource CustomButton}" ToolTip="Refresh installations (F5)" x:Name="btnRefreshUnityList" Content="⟳" Height="22" Width="22" HorizontalAlignment="Right" VerticalAlignment="Top" FontSize="16"  Margin="0,4,3,0" Padding="1,-2,1,1" BorderBrush="{x:Null}" Click="BtnRefreshUnityList_Click"/>

					<DataGrid x:Name="dataGridUnitys"  SelectionMode="Single" Margin="4,30,2,42" Background="{x:Null}" BorderBrush="{x:Null}" ColumnHeaderStyle="{StaticResource HeaderStyle}" Padding="0" HorizontalScrollBarVisibility="Disabled" HeadersVisibility="Column" Foreground="{DynamicResource GridForeground}" HorizontalGridLinesBrush="{DynamicResource GridHorizontalGridLines}" VerticalGridLinesBrush="{DynamicResource GridVerticalGridLines}" AutoGenerateColumns="False" PreviewKeyDown="DataGridUnitys_PreviewKeyDown" PreviewMouseDoubleClick="DataGridUnitys_PreviewMouseDoubleClick">
						<DataGrid.CommandBindings>
							<CommandBinding Command="ApplicationCommands.Copy" Executed="CopyRowFolderToClipBoard" CanExecute="CanExecute_Copy"/>
						</DataGrid.CommandBindings>
						<DataGrid.Columns>
							<DataGridTextColumn ClipboardContentBinding="{x:Null}" IsReadOnly="True" MinWidth="16">
								<DataGridTextColumn.ElementStyle>
									<Style TargetType="{x:Type TextBlock}">
										<Style.Triggers>
											<DataTrigger Binding="{Binding IsPreferred}" Value="true">
												<Setter Property="Text" Value="★" />
												<Setter Property="TextAlignment" Value="Center" />
											</DataTrigger>
										</Style.Triggers>
									</Style>
								</DataGridTextColumn.ElementStyle>
							</DataGridTextColumn>

							<DataGridTextColumn Binding="{Binding Version}" ClipboardContentBinding="{x:Null}" Header="Version" IsReadOnly="True" MinWidth="123"/>
							<DataGridTextColumn Binding="{Binding Path}" ClipboardContentBinding="{x:Null}" Header="Path" IsReadOnly="True"/>
							<DataGridTextColumn Binding="{Binding Installed, StringFormat=\{0:dd/MM/yyyy HH:mm:ss\}}" ClipboardContentBinding="{x:Null}" Header="Installed" IsReadOnly="True"/>
							<DataGridTextColumn Binding="{Binding Platforms}" ClipboardContentBinding="{x:Null}" Header="Platforms" IsReadOnly="True"/>
						</DataGrid.Columns>

						<!-- right click context menu -->
						<DataGrid.ContextMenu>
							<ContextMenu>
								<MenuItem x:Name="menuItemCopyVersionInstalled" Header="Copy Unity Version" Click="MenuItemCopyVersion_Click" />
								<MenuItem x:Name="menuItemShowUnityInExplorer" Header="Show in Explorer" Click="MenuItemShowProjectInExplorer_Click" />
								<MenuItem x:Name="menuItemSetPreferredUnityVersion" Header="Set as Preferred Version" Click="MenuItemSetPreferredUnityVersion_Click"/>
							</ContextMenu>
						</DataGrid.ContextMenu>

						<!-- sample data for testing -->
						<local:UnityInstallation Version="3000.1.2f1" Path="c:/proggies/unity3000" Installed="12.12.2020" />
					</DataGrid>

					<!-- bottom buttoms row -->
					<Grid VerticalAlignment="Bottom" Margin="4,0,8,5">
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="20*" />
							<ColumnDefinition Width="17*" />
							<ColumnDefinition Width="20*" />
							<ColumnDefinition Width="40*" />
							<ColumnDefinition Width="15*" />
						</Grid.ColumnDefinitions>

						<Grid.RowDefinitions>
							<RowDefinition Height="32" />
						</Grid.RowDefinitions>

						<Button Grid.Column="0" Style="{StaticResource CustomButton}" x:Name="btnReleaseNotes"   Margin="5,0,0,0" BorderBrush="{x:Null}" Click="BtnReleaseNotes_Click">
							<Label Content="Release _Notes" Foreground="{Binding Path=Foreground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Control}}}" />
						</Button>
						<Button Grid.Column="1" ToolTip="With selected Unity" Style="{StaticResource CustomButton}" x:Name="btnCreateEmptyProjectUnity"  Margin="8,0,0,0" BorderBrush="{x:Null}" Click="BtnCreateEmptyProjectUnity_Click" >
							<Label Content="_New Project" Foreground="{Binding Path=Foreground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Control}}}" />
						</Button>
						<Button Grid.Column="2" Style="{StaticResource CustomButton}" x:Name="btnUpdateUnity"  Margin="8,0,0,0" BorderBrush="{x:Null}" Click="BtnUpdateUnity_Click">
							<Label Content="Check Updates" Foreground="{Binding Path=Foreground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Control}}}" />
						</Button>
						<Button Grid.Column="3" Style="{StaticResource CustomButton}" x:Name="btnRunUnity"  Margin="8,0,0,0" BorderBrush="{x:Null}" Click="BtnRunUnity_Click" >
							<Label Content="_Run Unity" Foreground="{Binding Path=Foreground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Control}}}" />
						</Button>
						<Button Grid.Column="4" Style="{StaticResource CustomButton}" x:Name="btnExploreUnity" Margin="8,0,0,0" BorderBrush="{x:Null}" Click="BtnExploreUnity_Click" >
							<Label Content="_Explore" Foreground="{Binding Path=Foreground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Control}}}" />
						</Button>

					</Grid>
				</Grid>
			</TabItem>

			<!-- Tab: Updates -->
			<TabItem Header="Updates" Style="{DynamicResource TabItemStyle1}" Padding="0,0,0,0" Margin="-1,1,1,-1" BorderBrush="{x:Null}" Background="Black" >
				<Grid>
					<!-- search box -->
					<Grid Background="{DynamicResource TextBoxBackground}" HorizontalAlignment="Left" VerticalAlignment="Top" Width="222" Margin="6,5,0,0" Height="20"  >
						<TextBlock Margin="3,2" MinWidth="100" Text="Search" Foreground="{DynamicResource SearchForeground}" Visibility="{Binding Text.IsEmpty, Converter={StaticResource MyBoolToVisibilityConverter}, ElementName=txtSearchBoxUpdates}" Height="24" />
						<TextBox MinWidth="100" CaretBrush="{DynamicResource SearchCaret}" x:Name="txtSearchBoxUpdates" Background="Transparent" BorderBrush="{x:Null}" Foreground="{DynamicResource SearchForeground}" SelectionBrush="{DynamicResource SearchSelection}" BorderThickness="0" Margin="2,2,0,0" UndoLimit="64" PreviewKeyDown="TxtSearchBoxUpdates_PreviewKeyDown" TextChanged="TxtSearchBoxUpdates_TextChanged" />
						<Button x:Name="btnClearUpdatesSearch" Style="{StaticResource {x:Static ToolBar.ButtonStyleKey}}" BorderThickness="0"  HorizontalAlignment="Right" VerticalAlignment="Top" Height="23" Width="23" Background="Transparent" Padding="0,2" Visibility="Visible" BorderBrush="{x:Null}" Click="OnClearUpdateSearchClick">
							<TextBlock Text="❌" FontSize="8" Foreground="{DynamicResource SearchClose}" Padding="5,3,4,4" HorizontalAlignment="Center">
								<TextBlock.Style>
									<Style TargetType="{x:Type TextBlock}">
										<Style.Triggers>
											<DataTrigger Binding="{Binding Text, ElementName=txtSearchBoxUpdates}" Value="">
												<Setter Property="Visibility" Value="Hidden"/>

											</DataTrigger>
											<DataTrigger Binding="{Binding Text, ElementName=txtSearchBoxUpdates}" Value="{x:Null}">
												<Setter Property="Visibility" Value="Hidden"/>
											</DataTrigger>
										</Style.Triggers>
									</Style>
								</TextBlock.Style>
							</TextBlock>
						</Button>
					</Grid>

					<Button Style="{StaticResource CustomButton}" ToolTip="Fetch released versions" x:Name="btnRefreshUpdatesList" Content="⟳" Height="22" Width="22" HorizontalAlignment="Right" VerticalAlignment="Top" FontSize="16"  Margin="0,4,3,0" Padding="1,-2,1,1" BorderBrush="{x:Null}" Click="OnGetUnityUpdatesClick"/>
					<DataGrid x:Name="dataGridUpdates"  SelectionMode="Single" Margin="4,30,2,42" Background="{x:Null}" BorderBrush="{x:Null}" ColumnHeaderStyle="{StaticResource HeaderStyle}" Padding="0" HorizontalScrollBarVisibility="Disabled" HeadersVisibility="Column" Foreground="{DynamicResource GridForeground}" HorizontalGridLinesBrush="{DynamicResource GridHorizontalGridLines}" VerticalGridLinesBrush="{DynamicResource GridVerticalGridLines}" AutoGenerateColumns="False" PreviewKeyDown="DataGridUpdates_PreviewKeyDown" PreviewMouseDoubleClick="DataGridUpdates_PreviewMouseDoubleClick">
						<DataGrid.CommandBindings>
							<CommandBinding Command="ApplicationCommands.Copy" Executed="CopyRowFolderToClipBoard" CanExecute="CanExecute_Copy"/>
						</DataGrid.CommandBindings>
						<DataGrid.Columns>
							<DataGridTextColumn Binding="{Binding ReleaseDate, StringFormat=\{0:dd/MM/yyyy\}}" ClipboardContentBinding="{x:Null}"  MinWidth="100" Header="Released" IsReadOnly="True"/>
							<DataGridTextColumn Binding="{Binding Version}" ClipboardContentBinding="{x:Null}" Header="Version" IsReadOnly="True" MinWidth="222">
								<DataGridTextColumn.CellStyle>
									<Style TargetType="{x:Type DataGridCell}">
										<Style.Triggers>
											<DataTrigger Binding="{Binding Version, Converter={StaticResource MyConverter}}" Value="true">
												<Setter Property="Foreground" Value="{StaticResource GridGreenText}" />
											</DataTrigger>
										</Style.Triggers>
									</Style>
								</DataGridTextColumn.CellStyle>
							</DataGridTextColumn>
						</DataGrid.Columns>

						<!-- right click context menu -->
						<DataGrid.ContextMenu>
							<ContextMenu>
								<MenuItem x:Name="menuItemCopyUpdatesVersion" Header="Copy Unity Version" Click="MenuItemCopyVersion_Click" />
							</ContextMenu>
						</DataGrid.ContextMenu>
						<local:Updates ReleaseDate="2020-10-10" Version="5000.1.2.3"/>

						<!-- sample data for testing -->
					</DataGrid>

					<!-- bottom buttoms row -->
					<Grid VerticalAlignment="Bottom" Margin="4,0,8,5">
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="20*" />
							<ColumnDefinition Width="45*" />
						</Grid.ColumnDefinitions>
						<Grid.RowDefinitions>
							<RowDefinition Height="32" />
						</Grid.RowDefinitions>
						<Button Grid.Column="0" Style="{StaticResource CustomButton}" x:Name="btnDonwloadInBrowser"  Margin="5,0,0,0" BorderBrush="{x:Null}" Click="BtnDonwloadInBrowser_Click">
							<Label Content="_Download in browser" Foreground="{Binding Path=Foreground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Control}}}" />
						</Button>
						<Button Grid.Column="1" Style="{StaticResource CustomButton}" x:Name="btnOpenWebsite"  Margin="8,0,0,0" BorderBrush="{x:Null}" Click="BtnOpenWebsite_Click" >
							<Label Content="Release _Notes" Foreground="{Binding Path=Foreground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Control}}}" />
						</Button>
					</Grid>
				</Grid>

			</TabItem>

			<!-- Tab: Tools -->
			<TabItem Header="Tools" Style="{DynamicResource TabItemStyle1}" Padding="0,0,0,0" Margin="-1,1,1,-1" BorderBrush="{x:Null}" Background="Black">
				<Grid>
					<Grid.RowDefinitions>
						<RowDefinition Height="15*" />
						<RowDefinition Height="50*" />
					</Grid.RowDefinitions>
					<!-- 1st part -->
					<Grid Grid.Row="0" VerticalAlignment="Top" HorizontalAlignment="Left">
						<StackPanel Orientation="Vertical" Margin="10">
							<Border HorizontalAlignment="Left" VerticalAlignment="Top">
								<StackPanel Orientation="Horizontal" Margin="10">
									<Label Content="Folders" Foreground="{DynamicResource ButtonForeground}" />
									<Button Style="{StaticResource CustomButton}" x:Name="btnOpenEditorLogsFolder"  Margin="0" BorderBrush="{x:Null}" HorizontalAlignment="Left" VerticalAlignment="Top" Click="BtnOpenEditorLogsFolder_Click" ToolTip="Browse Editor logs folder">
										<Label Content="_Editor Logs" Foreground="{Binding Path=Foreground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Control}}}" />
									</Button>
									<Button Style="{StaticResource CustomButton}" x:Name="btnOpenPlayerLogs" Margin="10,0,0,0" BorderBrush="{x:Null}" HorizontalAlignment="Left" VerticalAlignment="Top" Click="BtnOpenPlayerLogs_Click" ToolTip="Browse Player logs folder">
										<Label Content="_Player Logs" Foreground="{Binding Path=Foreground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Control}}}" />
									</Button>
									<Button Style="{StaticResource CustomButton}" x:Name="btnOpenCrashLogs" Margin="10,0,0,0" BorderBrush="{x:Null}" HorizontalAlignment="Left" VerticalAlignment="Top" Click="BtnOpenCrashLogs_Click" ToolTip="Browse Crash logs folder">
										<Label Content="_Crash Logs" Foreground="{Binding Path=Foreground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Control}}}" />
									</Button>
									<Button Style="{StaticResource CustomButton}" x:Name="btnAssetPackages" Margin="10,0,0,0" BorderBrush="{x:Null}" HorizontalAlignment="Left" VerticalAlignment="Top" ToolTip="Browse AssetStore downloads folder" Click="BtnAssetPackages_Click">
										<Label Content="A_sset packages" Foreground="{Binding Path=Foreground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Control}}}" />
									</Button>
								</StackPanel>
							</Border>
							<Border HorizontalAlignment="Left" VerticalAlignment="Top">
								<StackPanel Orientation="Horizontal" Margin="10">
									<Label Content="Tools" Foreground="{DynamicResource ButtonForeground}" />
									<Button Style="{StaticResource CustomButton}" x:Name="btnOpenADBLogCat" Margin="10,0,0,0" BorderBrush="{x:Null}" HorizontalAlignment="Left" VerticalAlignment="Top" Click="BtnOpenADBLogCat_Click" ToolTip="Start ADB logcat commandline">
										<Label Content="_ADB logcat" Foreground="{Binding Path=Foreground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Control}}}" />
									</Button>
									<Button Style="{StaticResource CustomButton}" x:Name="btnAdbBindWifi" Margin="10,0,0,0" BorderBrush="{x:Null}" HorizontalAlignment="Left" VerticalAlignment="Top" Click="BtnAdbBindWifi_Click" IsEnabled="False" ToolTip="Bind Android device to wireless ADB">
										<Label Content="_Bind Wifi" Foreground="{Binding Path=Foreground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Control}}}" />
									</Button>
								</StackPanel>
							</Border>
						</StackPanel>
					</Grid>
					<!-- 2nd part -->
					<Grid Grid.Row="1" VerticalAlignment="Top">
						<StackPanel Orientation="Horizontal" Margin="0">
							<Label Content="Build Report" Foreground="{DynamicResource ButtonForeground}" HorizontalAlignment="Left" VerticalAlignment="Top" VerticalContentAlignment="Center" />
							<Button x:Name="btnClearBuildReport" Style="{StaticResource CustomButton}" ToolTip="Clear report" Content="🗑" Height="22" Width="22" HorizontalAlignment="Center" VerticalAlignment="Top" FontSize="16"  Margin="0,4,10,0" Padding="1,-2,1,1" BorderBrush="{x:Null}" Click="BtnClearBuildReport_Click" />
							<Button x:Name="btnRefreshBuildReport" Style="{StaticResource CustomButton}" ToolTip="Get latest Build Report from Editor.log" Content="⟳" Height="22" Width="22" HorizontalAlignment="Center" VerticalAlignment="Top" FontSize="16"   Margin="0,4,10,0" Padding="1,-2,1,1" BorderBrush="{x:Null}" Click="BtnRefreshBuildReport_Click"/>
							<!--<CheckBox x:Name="chkAutoUpdateBuildReport" Content="AutoUpdate" Foreground="{DynamicResource ButtonForeground}" Margin="0,0,0,3" ToolTip="" HorizontalAlignment="Right" VerticalAlignment="Top" Height="26" VerticalContentAlignment="Center" IsEnabled="False"/>-->
						</StackPanel>
						<DataGrid x:Name="gridBuildReport"  SelectionMode="Single" Margin="4,30,2,0" Background="{x:Null}" BorderBrush="{x:Null}" ColumnHeaderStyle="{StaticResource HeaderStyle}" Padding="0" HorizontalScrollBarVisibility="Disabled" HeadersVisibility="Column" Foreground="{DynamicResource GridForeground}" HorizontalGridLinesBrush="{DynamicResource GridHorizontalGridLines}" VerticalGridLinesBrush="{DynamicResource GridVerticalGridLines}" AutoGenerateColumns="False" VerticalAlignment="Top">
							<DataGrid.Columns>
								<DataGridTextColumn Binding="{Binding Size}" ClipboardContentBinding="{x:Null}" Header="Size" IsReadOnly="True" MinWidth="75"/>
								<DataGridTextColumn Binding="{Binding Percentage}" ClipboardContentBinding="{x:Null}" Header="%" IsReadOnly="True" MinWidth="55" />
								<DataGridTextColumn Binding="{Binding Path}" ClipboardContentBinding="{x:Null}" Header="Path" IsReadOnly="True"/>
							</DataGrid.Columns>

							<!-- sample data for testing -->
							<local:BuildReport Size="10.0 mb" Percentage="50.0%" Path="Assets/Textures/sample.png" />
						</DataGrid>

					</Grid>

				</Grid>
			</TabItem>

			<!-- Tab: Settings -->
			<TabItem Header="Settings" Style="{DynamicResource TabItemStyle1}" Padding="0,0,0,0" Margin="-1,1,1,-1" BorderBrush="{x:Null}" Background="Black">
				<Grid>
					<Grid.RowDefinitions>
						<!-- top labels-->
						<RowDefinition Height="28" />
						<!-- install locations list box -->
						<RowDefinition Height="30*" />
						<!-- list buttons -->
						<RowDefinition Height="33" />
						<!-- settings -->
						<RowDefinition Height="70*" />
						<!-- links -->
						<RowDefinition Height="40" />
					</Grid.RowDefinitions>

					<!-- top labels -->
					<Label Grid.Row="0" Content="Unity Installation Parent Folders" Foreground="{DynamicResource ButtonForeground}" HorizontalAlignment="Left" VerticalAlignment="Bottom" ToolTip="Search will try to find Unity installations under these folders"/>
					<Label x:Name="lblFoundXInstallations" Grid.Row="0" Content="Found .. Installations" Foreground="{DynamicResource ButtonForeground}" HorizontalAlignment="Right" VerticalAlignment="Bottom"/>
					<!-- locations list -->
					<ListBox x:Name="lstRootFolders" Grid.Row="1" Background="{DynamicResource ButtonBackground}" Margin="4,0,2,0" Foreground="{DynamicResource ButtonForeground}" >
						<System:String>c:\Program Files</System:String>
					</ListBox>
					<!-- locations add/remove -->
					<StackPanel Grid.Row="2" Orientation="Horizontal" Margin="0" >
						<Button Style="{StaticResource CustomButton}" x:Name="btnAddInstallationFolder"   Margin="5,4,0,3" BorderBrush="{x:Null}" HorizontalAlignment="Left" VerticalAlignment="Center" Click="BtnAddInstallationFolder_Click" Width="116">
							<Label Content="_Add Folder" Foreground="{Binding Path=Foreground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Control}}}" />
						</Button>
						<Button Style="{StaticResource CustomButton}" x:Name="btnRemoveInstallationFolder"   Margin="5,0,0,0" BorderBrush="{x:Null}" HorizontalAlignment="Left" VerticalAlignment="Center" Click="BtnRemoveInstallationFolder_Click">
							<Label Content="_Remove Folder" Foreground="{Binding Path=Foreground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Control}}}" />
						</Button>
					</StackPanel>
					<!-- settings-->
					<StackPanel Grid.Row="3" Orientation="Vertical" Margin="5,10,3,3" >
						<CheckBox x:Name="chkMinimizeToTaskbar" Content="Minimize to tray" Foreground="{DynamicResource ButtonForeground}" Checked="ChkMinimizeToTaskbar_CheckedChanged" Unchecked="ChkMinimizeToTaskbar_CheckedChanged" Margin="0,0,0,3" ToolTip="When window is minimized, hides application into taskbar icon area"/>
						<CheckBox x:Name="chkRegisterExplorerMenu" Content="Register Explorer context menu" Foreground="{DynamicResource ButtonForeground}" Unchecked="ChkRegisterExplorerMenu_CheckedChanged" Checked="ChkRegisterExplorerMenu_CheckedChanged" Margin="0,0,0,3" ToolTip="Install registry entry for Explorer context menu"/>
						<CheckBox x:Name="chkQuitAfterOpen" Content="Close after opening project" Foreground="{DynamicResource ButtonForeground}" Checked="ChkQuitAfterOpen_CheckedChanged" Unchecked="ChkQuitAfterOpen_CheckedChanged" Margin="0,0,0,3" ToolTip="Closes launcher after running project (not really useful)"/>
						<CheckBox x:Name="chkQuitAfterCommandline" Content="Close after launching from Explorer" Foreground="{DynamicResource ButtonForeground}" Unchecked="ChkQuitAfterCommandline_CheckedChanged" Checked="ChkQuitAfterCommandline_CheckedChanged" Margin="0,0,0,3" ToolTip="Close launcher after running from commandline or Explorer (recommended)"/>
						<CheckBox x:Name="chkShowLauncherArgumentsColumn" Content="Show commandline arguments column" Foreground="{DynamicResource ButtonForeground}" Unchecked="ChkShowLauncherArgumentsColumn_CheckedChanged" Checked="ChkShowLauncherArgumentsColumn_CheckedChanged" Margin="0,0,0,3" ToolTip="Shows column for custom project commandline params"/>
						<CheckBox x:Name="chkShowGitBranchColumn" Content="Show git branch column" Foreground="{DynamicResource ButtonForeground}" Checked="ChkShowGitBranchColumn_CheckedChanged" Unchecked="ChkShowGitBranchColumn_CheckedChanged" Margin="0,0,0,3" ToolTip="Shows column for project git branch info"/>
						<CheckBox x:Name="chkShowMissingFolderProjects" Content="Show projects that don't exist on disk" Foreground="{DynamicResource ButtonForeground}" Checked="ChkShowMissingFolderProjects_CheckedChanged" Unchecked="ChkShowMissingFolderProjects_CheckedChanged" Margin="0,0,0,3" ToolTip="List in recent projects, even if the project folder is missing"/>
						<CheckBox x:Name="chkAllowSingleInstanceOnly" Content="Allow single instance only" Foreground="{DynamicResource ButtonForeground}" Checked="ChkAllowSingleInstanceOnly_CheckedChanged" Unchecked="ChkAllowSingleInstanceOnly_CheckedChanged" Margin="0,0,0,3" ToolTip="Activates already running instance, instead of starting new exe (not working if app is minized to taskbar)"/>
						<CheckBox x:Name="chkEnableProjectRename" Content="Enable Project Renaming (Not recommended for beginners)" Foreground="{DynamicResource ButtonForeground}" Margin="0,0,0,3" ToolTip="Can use F2 to rename project folders, Note that project will disappears from list on refresh, unless you open it (since its new path, not in unity recent projects registry)" Checked="ChkEnableProjectRename_Checked" Unchecked="ChkEnableProjectRename_Checked"/>
						<CheckBox x:Name="chkAskNameForQuickProject" Content="Ask name for New Project" Foreground="{DynamicResource ButtonForeground}" Checked="ChkAskNameForQuickProject_Checked" Unchecked="ChkAskNameForQuickProject_Checked" Margin="0,0,0,3" ToolTip="If disabled, uses automatic quick project naming"/>
						<CheckBox x:Name="chkStreamerMode" Content="Streamer Mode (hide project names and folders)" Foreground="{DynamicResource ButtonForeground}" Margin="0,0,0,3" ToolTip="" Checked="ChkStreamerMode_Checked" Unchecked="ChkStreamerMode_Checked"/>
						<CheckBox x:Name="chkShowPlatform" Content="Show current target platform (if exists in .csproj)" Foreground="{DynamicResource ButtonForeground}" Margin="0,0,0,3" ToolTip="" Checked="ChkShowPlatform_Checked" Unchecked="ChkShowPlatform_Checked"/>

						<StackPanel Grid.Row="3" Orientation="Horizontal">
							<Label Content="Root Folder for New Projects" Foreground="{DynamicResource ButtonForeground}" />
							<TextBox x:Name="txtRootFolderForNewProjects" MinWidth="300" ToolTip="When you click &quot;Create Project&quot; in main page, new project is generated under this path+UnityVersion (eg. /2017a/)" Padding="0,3,0,0" TextChanged="TxtRootFolderForNewProjects_TextChanged" />
							<Button x:Name="btnBrowseProjectRootFolder" Content="..." Margin="6,0,0,0" MinWidth="32" Click="BtnBrowseProjectRootFolder_Click" />
						</StackPanel>
					</StackPanel>

					<!-- links-->
					<Button Grid.Row="4" Style="{StaticResource CustomButton}" x:Name="btnOpenGithub" Margin="0,0,15,10" BorderBrush="{x:Null}" HorizontalAlignment="Right" VerticalAlignment="Center" Click="BtnOpenGithub_Click">
						<Label Content="_View in Github" Foreground="{Binding Path=Foreground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Control}}}" />
					</Button>

				</Grid>
			</TabItem>
		</TabControl>

		<Grid Grid.Row="2" UseLayoutRounding="False">
			<StatusBar VerticalAlignment="Bottom" Margin="3,1,20,1" Background="{x:Null}" Foreground="{DynamicResource StatusText}">
				<TextBlock x:Name="txtStatus" Margin="6,1,3,0"  VerticalAlignment="Center" Text="Ready"/>
			</StatusBar>
		</Grid>
	</Grid>
</Window>
