<Window x:Class="UnityLauncherPro.NewProject"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:UnityLauncherPro"
        mc:Ignorable="d"
        Title="Create New Project" Height="296" Width="300" Background="{DynamicResource DarkestBackground}" PreviewKeyDown="Window_PreviewKeyDown" ResizeMode="NoResize" WindowStartupLocation="CenterOwner">
	<Window.Resources>
		<!-- custom buttons -->
		<Style x:Key="CustomButton" TargetType="{x:Type Button}">
			<Setter Property="SnapsToDevicePixels" Value="true"/>
			<Setter Property="OverridesDefaultStyle" Value="true"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type Button}">
						<Border x:Name="shortcutbutton" BorderThickness="0" BorderBrush="Black" Background="{TemplateBinding Background}">
							<ContentPresenter Margin="0" HorizontalAlignment="Center" VerticalAlignment="Center" RecognizesAccessKey="True"/>
						</Border>
						<ControlTemplate.Triggers>
							<Trigger Property="IsMouseOver" Value="true">
								<Setter TargetName="shortcutbutton" Property="Background" Value="#FF494949" />
							</Trigger>
							<Trigger Property="IsPressed" Value="true">
								<Setter TargetName="shortcutbutton" Property="Background" Value="#FF0F0F0F" />
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>

		<!--TODO move to styles-->
		<!-- datagrid rows & row selection -->
		<Style TargetType="DataGridRow">
			<Setter Property="Background" Value="{StaticResource ButtonBackground}" />
			<Setter Property="BorderBrush" Value="{x:Null}" />
			<Setter Property="BorderThickness" Value="0,0,0,0" />
			<Style.Triggers>
				<!--<Trigger Property="IsMouseOver" Value="True">
					<Setter Property="Background" Value="{StaticResource DataGridRowMouseOver}"/>
				</Trigger>-->
				<Trigger Property="IsSelected" Value="True">
					<Setter Property="Background" Value="{StaticResource DataGridRowSelectedBackground}" />
				</Trigger>
			</Style.Triggers>
		</Style>

		<!-- datagrid hide selected cell borders -->
		<Style TargetType="{x:Type DataGridCell}">
			<Setter Property="BorderBrush" Value="Transparent" />
			<Setter Property="FocusVisualStyle" Value="{x:Null}" />
			<Setter Property="Margin" Value="0,0.5,0,0.5" />
			<Style.Triggers>
				<Trigger Property="IsSelected" Value="True">
					<Setter Property="Background" Value="Transparent" />
				</Trigger>
				<Trigger Property="IsSelected" Value="False">
					<Setter Property="Background" Value="Transparent" />
				</Trigger>
			</Style.Triggers>
		</Style>

		<!-- datagrid scrollbar customization -->
		<!-- scrollbar top/bottom arrow buttons -->
		<Style x:Key="ScrollBarLineButton" TargetType="{x:Type RepeatButton}">
			<Setter Property="SnapsToDevicePixels" Value="True"/>
			<Setter Property="OverridesDefaultStyle" Value="true"/>
			<Setter Property="Focusable" Value="false"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type RepeatButton}">
						<!-- button background -->
						<Border Name="Border" Margin="1" CornerRadius="0" BorderThickness="0" Background="{DynamicResource ButtonBackground}" BorderBrush="{x:Null}">
							<!-- arrow sign -->
							<Path HorizontalAlignment="Center" VerticalAlignment="Center" Fill="{DynamicResource ScrollArrowForeground}" Data="{Binding Path=Content,RelativeSource={RelativeSource TemplatedParent}}" />
						</Border>
						<ControlTemplate.Triggers>
							<!-- NOTE order matters, if pressed is before mouseover, then it gets overwritten -->
							<Trigger Property="IsMouseOver" Value="true">
								<Setter TargetName="Border" Property="Background" Value="{StaticResource TextBoxBackground}" />
							</Trigger>
							<Trigger Property="IsPressed" Value="true">
								<Setter TargetName="Border" Property="Background" Value="{StaticResource ScrollArrowPressed}" />
							</Trigger>
							<Trigger Property="IsEnabled" Value="false">
								<Setter Property="Foreground" Value="Black"/>
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>

		<Style x:Key="ScrollBarPageButton" TargetType="{x:Type RepeatButton}">
			<Setter Property="SnapsToDevicePixels" Value="True"/>
			<Setter Property="OverridesDefaultStyle" Value="true"/>
			<Setter Property="IsTabStop" Value="false"/>
			<Setter Property="Focusable" Value="false"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type RepeatButton}">
						<Border Background="Transparent" />
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>

		<!-- scroll thumb (elevator) bar -->
		<Style x:Key="ScrollBarThumb" TargetType="{x:Type Thumb}">
			<Setter Property="SnapsToDevicePixels" Value="True"/>
			<Setter Property="OverridesDefaultStyle" Value="true"/>
			<Setter Property="IsTabStop" Value="false"/>
			<Setter Property="Focusable" Value="false"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type Thumb}">
						<Border Name="Border" CornerRadius="0" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1" />
						<ControlTemplate.Triggers>
							<Trigger Property="IsMouseOver" Value="true">
								<Setter TargetName="Border" Property="Background" Value="{StaticResource ScrollBarThumbFill}" />
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>

		<ControlTemplate x:Key="VerticalScrollBar" TargetType="{x:Type ScrollBar}">
			<Grid >
				<Grid.RowDefinitions>
					<RowDefinition MaxHeight="18"/>
					<RowDefinition Height="0.00001*"/>
					<RowDefinition MaxHeight="18"/>
				</Grid.RowDefinitions>
				<!-- scrollbar background -->
				<Border Grid.RowSpan="3" CornerRadius="0" Background="{DynamicResource ScrollBarBackground}" />
				<!-- scrollbar top button -->
				<RepeatButton Grid.Row="0" Style="{StaticResource ScrollBarLineButton}" Height="18" Command="ScrollBar.LineUpCommand"  Content="M 0 4 L 8 4 L 4 0 Z" />
				<Track Name="PART_Track" Grid.Row="1" IsDirectionReversed="true">
					<Track.DecreaseRepeatButton>
						<RepeatButton Style="{StaticResource ScrollBarPageButton}" Command="ScrollBar.PageUpCommand" />
					</Track.DecreaseRepeatButton>
					<Track.Thumb>
						<!-- scrollbar foreground -->
						<Thumb Style="{StaticResource ScrollBarThumb}" Margin="1,0,1,0" Background="{DynamicResource ScrollBarFill}" BorderBrush="{x:Null}"/>
					</Track.Thumb>
					<Track.IncreaseRepeatButton>
						<RepeatButton Style="{StaticResource ScrollBarPageButton}" Command="ScrollBar.PageDownCommand" />
					</Track.IncreaseRepeatButton>
				</Track>
				<!-- scrollbar bottom button -->
				<RepeatButton Grid.Row="3" Style="{StaticResource ScrollBarLineButton}" Height="18" Command="ScrollBar.LineDownCommand" Content="M 0 0 L 4 4 L 8 0 Z" />
			</Grid>
		</ControlTemplate>

		<Style x:Key="{x:Type ScrollBar}" TargetType="{x:Type ScrollBar}">
			<Setter Property="SnapsToDevicePixels" Value="True"/>
			<Setter Property="OverridesDefaultStyle" Value="true"/>
			<Style.Triggers>
				<Trigger Property="Orientation" Value="Vertical">
					<Setter Property="Width" Value="18"/>
					<Setter Property="Height" Value="Auto" />
					<Setter Property="Template" Value="{StaticResource VerticalScrollBar}" />
				</Trigger>
			</Style.Triggers>
		</Style>

	</Window.Resources>

	<Grid>
		<StackPanel Margin="10,3">
			<Label Content="Unity Version " Foreground="{DynamicResource ButtonForeground}" Margin="0,0,0,3" Padding="5,5,5,3" />
			<DataGrid x:Name="gridAvailableVersions" SelectionMode="Single" Height="120" Margin="3,0" VerticalAlignment="Top" HeadersVisibility="None" AutoGenerateColumns="False" IsSynchronizedWithCurrentItem="True" Foreground="{DynamicResource ButtonForeground}" Background="{DynamicResource MainBackgroundColor}" SelectionChanged="GridAvailableVersions_SelectionChanged" IsTabStop="True" TabIndex="1" KeyboardNavigation.TabNavigation = "None" Loaded="GridAvailableVersions_Loaded" EnableRowVirtualization="False">
				<DataGrid.Columns>
					<DataGridTextColumn Header="Key" Binding="{Binding Key}" IsReadOnly="True" CanUserResize="False" MinWidth="300" />
				</DataGrid.Columns>
			</DataGrid>
			<Label Content="Project Name:" Foreground="{DynamicResource ButtonForeground}" Margin="0,0,0,3" Padding="5,5,5,3" />
			<TextBox x:Name="txtNewProjectName" VerticalAlignment="Center" Margin="3,0,3,3" IsUndoEnabled="True" TextChanged="TxtNewProjectName_TextChanged" PreviewKeyDown="TxtNewProjectName_PreviewKeyDown" TabIndex="0" />
			<Label x:Name="lblNewProjectFolder" Content="(folder)" Foreground="{DynamicResource ButtonBackground}" Margin="0" FontSize="10" Padding="5,0,5,3" />
			<Grid HorizontalAlignment="Stretch" Margin="0,8,0,0">
				<Grid.ColumnDefinitions>
					<ColumnDefinition Width="*"/>
					<ColumnDefinition Width="*"/>
				</Grid.ColumnDefinitions>
				<Button Grid.Column="0" Style="{StaticResource CustomButton}" x:Name="btnCancelNewProject" Background="{DynamicResource ButtonBackground}" Foreground="#FFC1C1C1" Margin="3,0,3,3" BorderBrush="{x:Null}" VerticalAlignment="Top" Height="35" Click="BtnCancelNewProject_Click" IsTabStop="False" >
					<Label Foreground="{DynamicResource ButtonForeground}" Content="Cancel"/>
				</Button>
				<Button Grid.Column="1" Style="{StaticResource CustomButton}" x:Name="btnCreateNewProject" Background="{DynamicResource ButtonBackground}" Foreground="#FFC1C1C1" Margin="3,0,3,3" BorderBrush="{x:Null}" VerticalAlignment="Top" Height="35" Click="BtnCreateNewProject_Click" IsTabStop="False">
					<Label Foreground="{DynamicResource ButtonForeground}" Content="_Create"/>
				</Button>
			</Grid>
		</StackPanel>
	</Grid>
</Window>
