<Window x:Class="UnityLauncherPro.ThemeEditor"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:UnityLauncherPro"
        mc:Ignorable="d"
        Title="ThemeEditor" Height="500" Width="500" WindowStyle="ToolWindow" Loaded="Window_Loaded" Background="#FF121212" ResizeMode="NoResize">

    <Window.CommandBindings>
        <CommandBinding Command="ApplicationCommands.Undo" Executed="Executed_Undo" CanExecute="CanExecute_Undo"/>
        <!--<CommandBinding Command="ApplicationCommands.Paste" Executed="Executed_Paste" CanExecute="CanExecute_Paste"/>-->
        <CommandBinding Command="ApplicationCommands.Save" Executed="Executed_Save" CanExecute="CanExecute_Save"/>
    </Window.CommandBindings>
    <Window.InputBindings>
        <KeyBinding Command="ApplicationCommands.Undo" Gesture="Ctrl+Z"/>
        <!--<KeyBinding Command="ApplicationCommands.Paste" Gesture="Ctrl+V"/>-->
        <KeyBinding Command="ApplicationCommands.Save" Gesture="Ctrl+S"/>
    </Window.InputBindings>

    <!--TODO take from mainwindow?-->
    <Window.Resources>

        <!-- datagrid header -->
        <Style x:Key="HeaderStyle" TargetType="{x:Type DataGridColumnHeader}">
            <Setter Property="Background" Value="#4C3F3F46" />
            <Setter Property="Foreground" Value="#FFB6B6B6" />
            <Setter Property="BorderBrush" Value="#4C000000" />
            <Setter Property="BorderThickness" Value="0,0,1,1" />
            <Setter Property="SnapsToDevicePixels" Value="True" />
            <Setter Property="HorizontalContentAlignment" Value="Left" />
            <Setter Property="Height" Value="28" />
            <Setter Property="Padding" Value="6,2,2,2" />
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#FF3F3F46"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <!-- custom buttons -->
        <Style x:Key="CustomButton" TargetType="{x:Type Button}">
            <Setter Property="SnapsToDevicePixels" Value="true"/>
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="shortcutbutton" BorderThickness="0" BorderBrush="Black" Background="{TemplateBinding Background}">
                            <ContentPresenter Margin="0" HorizontalAlignment="Center" VerticalAlignment="Center" RecognizesAccessKey="True"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter TargetName="shortcutbutton" Property="Background" Value="#FF494949" />
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter TargetName="shortcutbutton" Property="Background" Value="#FF0F0F0F" />
                            </Trigger>
                            <Trigger Property="IsFocused" Value="true">
                                <Setter TargetName="shortcutbutton" Property="BorderBrush" Value="#FF003D61" />
                                <Setter TargetName="shortcutbutton" Property="BorderThickness" Value="1" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--TODO move to styles-->
        <!-- datagrid rows & row selection -->
        <Style TargetType="DataGridRow">
            <Setter Property="Background" Value="#FF3F3F46" />
            <Setter Property="BorderBrush" Value="{x:Null}" />
            <Setter Property="BorderThickness" Value="0,0,0,0" />
            <Style.Triggers>
                <!--<Trigger Property="IsMouseOver" Value="True">
					<Setter Property="Background" Value="{StaticResource DataGridRowMouseOver}"/>
				</Trigger>-->
                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="Background" Value="#FF007ACC" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <!-- datagrid hide selected cell borders -->
        <Style TargetType="{x:Type DataGridCell}">
            <Setter Property="BorderBrush" Value="Transparent" />
            <Setter Property="FocusVisualStyle" Value="{x:Null}" />
            <Setter Property="Margin" Value="0,0.5,0,0.5" />
            <Style.Triggers>
                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="Background" Value="Transparent" />
                </Trigger>
                <Trigger Property="IsSelected" Value="False">
                    <Setter Property="Background" Value="Transparent" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <!-- datagrid scrollbar customization -->
        <!-- scrollbar top/bottom arrow buttons -->
        <Style x:Key="ScrollBarLineButton" TargetType="{x:Type RepeatButton}">
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="Focusable" Value="false"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <!-- button background -->
                        <Border Name="Border" Margin="1" CornerRadius="0" BorderThickness="0" Background="#FF3F3F46" BorderBrush="{x:Null}">
                            <!-- arrow sign -->
                            <Path HorizontalAlignment="Center" VerticalAlignment="Center" Fill="#FF5E5E64" Data="{Binding Path=Content,RelativeSource={RelativeSource TemplatedParent}}" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <!-- NOTE order matters, if pressed is before mouseover, then it gets overwritten -->
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter TargetName="Border" Property="Background" Value="#FF333337" />
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter TargetName="Border" Property="Background" Value="#FF838383" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="Black"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="ScrollBarPageButton" TargetType="{x:Type RepeatButton}">
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="IsTabStop" Value="false"/>
            <Setter Property="Focusable" Value="false"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Border Background="Transparent" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- scroll thumb (elevator) bar -->
        <Style x:Key="ScrollBarThumb" TargetType="{x:Type Thumb}">
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="IsTabStop" Value="false"/>
            <Setter Property="Focusable" Value="false"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Thumb}">
                        <Border Name="Border" CornerRadius="0" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1" />
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter TargetName="Border" Property="Background" Value="#FF6A6969" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <ControlTemplate x:Key="VerticalScrollBar" TargetType="{x:Type ScrollBar}">
            <Grid >
                <Grid.RowDefinitions>
                    <RowDefinition MaxHeight="18"/>
                    <RowDefinition Height="0.00001*"/>
                    <RowDefinition MaxHeight="18"/>
                </Grid.RowDefinitions>
                <!-- scrollbar background -->
                <Border Grid.RowSpan="3" CornerRadius="0" Background="#FF151515" />
                <!-- scrollbar top button -->
                <RepeatButton Grid.Row="0" Style="{StaticResource ScrollBarLineButton}" Height="18" Command="ScrollBar.LineUpCommand"  Content="M 0 4 L 8 4 L 4 0 Z" />
                <Track Name="PART_Track" Grid.Row="1" IsDirectionReversed="true">
                    <Track.DecreaseRepeatButton>
                        <RepeatButton Style="{StaticResource ScrollBarPageButton}" Command="ScrollBar.PageUpCommand" />
                    </Track.DecreaseRepeatButton>
                    <Track.Thumb>
                        <!-- scrollbar foreground -->
                        <Thumb Style="{StaticResource ScrollBarThumb}" Margin="1,0,1,0" Background="#FF47474B" BorderBrush="{x:Null}"/>
                    </Track.Thumb>
                    <Track.IncreaseRepeatButton>
                        <RepeatButton Style="{StaticResource ScrollBarPageButton}" Command="ScrollBar.PageDownCommand" />
                    </Track.IncreaseRepeatButton>
                </Track>
                <!-- scrollbar bottom button -->
                <RepeatButton Grid.Row="3" Style="{StaticResource ScrollBarLineButton}" Height="18" Command="ScrollBar.LineDownCommand" Content="M 0 0 L 4 4 L 8 0 Z" />
            </Grid>
        </ControlTemplate>

        <Style x:Key="{x:Type ScrollBar}" TargetType="{x:Type ScrollBar}">
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Style.Triggers>
                <Trigger Property="Orientation" Value="Vertical">
                    <Setter Property="Width" Value="18"/>
                    <Setter Property="Height" Value="Auto" />
                    <Setter Property="Template" Value="{StaticResource VerticalScrollBar}" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <local:ThemeColor x:Key="SolidColorBrushConverter"/>

    </Window.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="350"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <!--<DataGrid Grid.Row="0" x:Name="gridThemeColors" KeyboardNavigation.TabNavigation="None" SelectionMode="Single" Margin="3,0" HeadersVisibility="None" AutoGenerateColumns="False" IsSynchronizedWithCurrentItem="True" Foreground="{DynamicResource ThemeButtonForeground}" Background="{DynamicResource ThemeMainBackgroundColor}" IsTabStop="True" TabIndex="1" EnableRowVirtualization="False" VerticalScrollBarVisibility="Visible" SelectionChanged="GridThemeColors_SelectionChanged">-->
        <DataGrid Grid.Row="0" CanUserAddRows="False" x:Name="gridThemeColors" ColumnHeaderStyle="{StaticResource HeaderStyle}" KeyboardNavigation.TabNavigation="None" SelectionMode="Single" Margin="3,0" HeadersVisibility="Column" AutoGenerateColumns="False" IsSynchronizedWithCurrentItem="True" Foreground="#FFC1C1C1" Background="#FF262626" IsTabStop="True" TabIndex="1" EnableRowVirtualization="False" VerticalScrollBarVisibility="Visible" SelectionChanged="GridThemeColors_SelectionChanged">
            <DataGrid.Columns>
                <DataGridTextColumn CanUserSort="False" CanUserReorder="False" Header="Key" Binding="{Binding Key}" IsReadOnly="True" CanUserResize="False"/>
                <DataGridTextColumn CanUserSort="False" CanUserReorder="False" Header="Value" Binding="{Binding Brush}" IsReadOnly="True" CanUserResize="False">
                    <DataGridTextColumn.CellStyle>
                        <Style TargetType="{x:Type DataGridCell}">
                            <!--TODO could make this color opposite of background-->
                            <Setter Property="Foreground" Value="White" />
                            <Setter Property="Background" Value="{Binding Brush, Converter={StaticResource SolidColorBrushConverter}}" />
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Brush, Converter={StaticResource SolidColorBrushConverter}}" Value="true">
                                    <Setter Property="Foreground" Value="White" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </DataGridTextColumn.CellStyle>
                </DataGridTextColumn>
            </DataGrid.Columns>
        </DataGrid>
        <!--tools-->
        <StackPanel Grid.Row="1" Orientation="Horizontal" VerticalAlignment="Center">
            <Rectangle  x:Name="rectSelectedColor" Fill="#FF000000" HorizontalAlignment="Left"  Stroke="Black" Width="32" ToolTip="Current color" Margin="5,0,0,0"/>
            <!--<TextBox x:Name="txtSelectedColorHex" VerticalAlignment="Center" IsUndoEnabled="True" TabIndex="0" Width="189" Height="24" Margin="10,0,0,0" />-->
            <StackPanel Orientation="Vertical" Margin="0,0,0,0">
                <StackPanel Orientation="Horizontal">
                    <Label Foreground="#FFC1C1C1" Width="44">Red</Label>
                    <Slider x:Name="sliderRed" AutoToolTipPlacement="TopLeft" AutoToolTipPrecision="0" HorizontalAlignment="Left" Margin="0,0,0,0" VerticalAlignment="Top" Width="200" Height="28" Value="255" Maximum="255" LargeChange="0" SmallChange="1" ValueChanged="SliderRed_ValueChanged" PreviewMouseLeftButtonDown="SliderRed_PreviewMouseLeftButtonDown" IsSnapToTickEnabled="True"/>
                    <TextBox x:Name="txtRed" Text="{Binding ElementName=sliderRed,Path=Value}" Background="#FFAAAAAA" VerticalAlignment="Center" IsUndoEnabled="True" Width="32" Margin="5,0,0,8" KeyUp="TxtRed_KeyUp" PreviewKeyDown="TxtColorField_PreviewKeyDown" />
                </StackPanel>
                <StackPanel Orientation="Horizontal">
                    <Label Foreground="#FFC1C1C1" Width="44">Green</Label>
                    <Slider x:Name="sliderGreen"  AutoToolTipPlacement="TopLeft" AutoToolTipPrecision="0"  HorizontalAlignment="Left" Margin="0,0,0,0" VerticalAlignment="Top" Width="200" Height="28" Value="255" Maximum="255" LargeChange="0" SmallChange="1" ValueChanged="SliderGreen_ValueChanged" PreviewMouseLeftButtonDown="SliderGreen_PreviewMouseLeftButtonDown" IsSnapToTickEnabled="True"/>
                    <TextBox x:Name="txtGreen" Text="{Binding ElementName=sliderGreen,Path=Value}" VerticalAlignment="Center" IsUndoEnabled="True" Width="32" Background="#FFAAAAAA" Margin="5,0,0,8" KeyUp="TxtGreen_KeyUp" PreviewKeyDown="TxtColorField_PreviewKeyDown" />
                </StackPanel>
                <StackPanel Orientation="Horizontal">
                    <Label Foreground="#FFC1C1C1" Width="44">Blue</Label>
                    <Slider x:Name="sliderBlue"  AutoToolTipPlacement="TopLeft" AutoToolTipPrecision="0"  HorizontalAlignment="Left" Margin="0,0,0,0" VerticalAlignment="Top" Width="200" Height="28" Value="255" Maximum="255" LargeChange="0" SmallChange="1" ValueChanged="SliderBlue_ValueChanged" PreviewMouseLeftButtonDown="SliderBlue_PreviewMouseLeftButtonDown" IsSnapToTickEnabled="True"/>
                    <TextBox x:Name="txtBlue" Text="{Binding ElementName=sliderBlue,Path=Value}" VerticalAlignment="Center" IsUndoEnabled="True" Width="32" Background="#FFAAAAAA" Margin="5,0,0,8" KeyUp="TxtBlue_KeyUp" PreviewKeyDown="TxtColorField_PreviewKeyDown" />
                </StackPanel>
                <StackPanel Orientation="Horizontal">
                    <Label Foreground="#FFC1C1C1" Width="44">Alpha</Label>
                    <Slider x:Name="sliderAlpha"  AutoToolTipPlacement="TopLeft" AutoToolTipPrecision="0" HorizontalAlignment="Left" Margin="0,0,0,0" VerticalAlignment="Top" Width="200" Height="28" Value="255" Maximum="255" LargeChange="0" SmallChange="1" ValueChanged="SliderAlpha_ValueChanged" PreviewMouseLeftButtonDown="SliderAlpha_PreviewMouseLeftButtonDown" IsSnapToTickEnabled="True"/>
                    <TextBox x:Name="txtAlpha" Text="{Binding ElementName=sliderAlpha,Path=Value}" VerticalAlignment="Center" IsUndoEnabled="True" Width="32" Background="#FFAAAAAA" Margin="5,0,0,8" KeyUp="TxtAlpha_KeyUp" PreviewKeyDown="TxtColorField_PreviewKeyDown" />
                </StackPanel>
            </StackPanel>
            <StackPanel Orientation="Vertical" Margin="25,0,0,0" VerticalAlignment="Center" HorizontalAlignment="Center">
                <Button  x:Name="btnResetTheme" Style="{StaticResource CustomButton}" Background="#FF3F3F46" Foreground="#FFC1C1C1" BorderBrush="{x:Null}" VerticalAlignment="Center" Height="36" Click="BtnResetTheme_Click" TabIndex="3" Width="78.5" Margin="0,0,0,20">
                    <Label Foreground="#FFC1C1C1" Content="Reset Theme"/>
                </Button>
                <Button  x:Name="btnSaveTheme" Style="{StaticResource CustomButton}" Background="#FF3F3F46" Foreground="#FFC1C1C1" BorderBrush="{x:Null}" VerticalAlignment="Center" Height="36" TabIndex="3" Width="128" Margin="0" Click="BtnSaveTheme_Click">
                    <Label Foreground="#FFC1C1C1" Content="Save Theme"/>
                </Button>
            </StackPanel>
        </StackPanel>

    </Grid>
</Window>
